com/inmobi/ads/InMobiAdRequest = Com.Inmobi.Ads.InMobiAdRequest
com/inmobi/ads/NativeScrollableContainer = Com.Inmobi.Ads.NativeScrollableContainer
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;I)V = .ctor(Android.Content.Context, int)
  getType()I = Type
com/inmobi/ads/NativeVideoWrapper = Com.Inmobi.Ads.NativeVideoWrapper
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getPoster()Landroid/widget/ImageView; = Poster
  getProgressBar()Landroid/widget/ProgressBar; = ProgressBar
  setPosterImage(Landroid/graphics/Bitmap;)V = SetPosterImage(Android.Graphics.Bitmap)
com/inmobi/commons/core/network/NetworkError = Com.Inmobi.Commons.Core.Network.NetworkError
  b = B
com/inmobi/commons/core/network/WebViewNetworkTask = Com.Inmobi.Commons.Core.Network.WebViewNetworkTask
  b = B
  c = C
com/inmobi/commons/core/utilities/uid/ImIdShareBroadCastReceiver = Com.Inmobi.Commons.Core.Utilities.Uid.ImIdShareBroadCastReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/inmobi/showcase/BuildConfig = Com.Inmobi.Showcase.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/integralads/avid/library/inmobi/BuildConfig = Com.Integralads.Avid.Library.Inmobi.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  RELEASE_DATE = ReleaseDate
  SDK_NAME = SdkName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/integralads/avid/library/inmobi/deferred/AvidDeferredAdSessionListener = Com.Integralads.Avid.Library.Inmobi.Deferred.IAvidDeferredAdSessionListener
  recordReadyEvent()V = RecordReadyEvent()
com/integralads/avid/library/inmobi/DownloadAvidTask = Com.Integralads.Avid.Library.Inmobi.DownloadAvidTask
com/integralads/avid/library/inmobi/processing/AvidProcessorFactory = Com.Integralads.Avid.Library.Inmobi.Processing.AvidProcessorFactory
  <init>()V = .ctor()
  getRootProcessor()Lcom/integralads/avid/library/inmobi/processing/IAvidNodeProcessor; = RootProcessor
com/integralads/avid/library/inmobi/processing/IAvidNodeProcessor = Com.Integralads.Avid.Library.Inmobi.Processing.IAvidNodeProcessor
  getState(Landroid/view/View;)Lorg/json/JSONObject; = GetState(Android.Views.View)
  iterateChildren(Landroid/view/View;Lorg/json/JSONObject;Lcom/integralads/avid/library/inmobi/processing/IAvidNodeProcessor$IAvidViewWalker;Z)V = IterateChildren(Android.Views.View, Org.Json.JSONObject, Com.Integralads.Avid.Library.Inmobi.Processing.IAvidNodeProcessorAvidViewWalker, bool)
com/integralads/avid/library/inmobi/session/ExternalAvidAdSessionContext = Com.Integralads.Avid.Library.Inmobi.Session.ExternalAvidAdSessionContext
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Z)V = .ctor(string, bool)
  isDeferred()Z = IsDeferred
  getPartnerVersion()Ljava/lang/String; = PartnerVersion
com/integralads/avid/library/inmobi/session/internal/jsbridge/AvidEvent = Com.Integralads.Avid.Library.Inmobi.Session.Internal.Jsbridge.AvidEvent
  <init>()V = .ctor()
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Lorg/json/JSONObject;)V = .ctor(int, string, Org.Json.JSONObject)
  getData()Lorg/json/JSONObject; = Data
  setData(Lorg/json/JSONObject;)V = Data
  getTag()I = Tag
  setTag(I)V = Tag
  getType()Ljava/lang/String; = Type
  setType(Ljava/lang/String;)V = Type
com/integralads/avid/library/inmobi/session/internal/jsbridge/AvidJavascriptInterface = Com.Integralads.Avid.Library.Inmobi.Session.Internal.Jsbridge.AvidJavascriptInterface
  AVID_OBJECT = AvidObject
  getAvidAdSessionContext()Ljava/lang/String; = AvidAdSessionContext
  getCallback()Lcom/integralads/avid/library/inmobi/session/internal/jsbridge/AvidJavascriptInterface$AvidJavascriptInterfaceCallback; = Callback
  setCallback(Lcom/integralads/avid/library/inmobi/session/internal/jsbridge/AvidJavascriptInterface$AvidJavascriptInterfaceCallback;)V = Callback
com/integralads/avid/library/inmobi/session/internal/MediaType = Com.Integralads.Avid.Library.Inmobi.Session.Internal.MediaType
  DISPLAY = Display
  VIDEO = Video
  toString()Ljava/lang/String; = ToString()
  valueOf(Ljava/lang/String;)Lcom/integralads/avid/library/inmobi/session/internal/MediaType; = ValueOf(string)
  values()[Lcom/integralads/avid/library/inmobi/session/internal/MediaType; = Values()
com/integralads/avid/library/inmobi/session/internal/SessionType = Com.Integralads.Avid.Library.Inmobi.Session.Internal.SessionType
  DISPLAY = Display
  MANAGED_DISPLAY = ManagedDisplay
  MANAGED_VIDEO = ManagedVideo
  VIDEO = Video
  toString()Ljava/lang/String; = ToString()
  valueOf(Ljava/lang/String;)Lcom/integralads/avid/library/inmobi/session/internal/SessionType; = ValueOf(string)
  values()[Lcom/integralads/avid/library/inmobi/session/internal/SessionType; = Values()
com/integralads/avid/library/inmobi/session/internal/trackingwebview/AvidJavaScriptResourceInjector = Com.Integralads.Avid.Library.Inmobi.Session.Internal.Trackingwebview.IAvidJavaScriptResourceInjector
  injectJavaScriptResource(Ljava/lang/String;)V = InjectJavaScriptResource(string)
com/integralads/avid/library/inmobi/utils/AvidCommand = Com.Integralads.Avid.Library.Inmobi.Utils.AvidCommand
  <init>()V = .ctor()
  callAvidbridge(Ljava/lang/String;)Ljava/lang/String; = CallAvidbridge(string)
  formatJavaScript(Ljava/lang/String;)Ljava/lang/String; = FormatJavaScript(string)
  publishReadyEventForDeferredAdSession()Ljava/lang/String; = PublishReadyEventForDeferredAdSession()
  publishVideoEvent(Ljava/lang/String;)Ljava/lang/String; = PublishVideoEvent(string)
  publishVideoEvent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = PublishVideoEvent(string, string)
  setAppState(Ljava/lang/String;)Ljava/lang/String; = SetAppState(string)
  setAvidAdSessionContext(Ljava/lang/String;)Ljava/lang/String; = SetAvidAdSessionContext(string)
  setNativeViewState(Ljava/lang/String;)Ljava/lang/String; = SetNativeViewState(string)
com/integralads/avid/library/inmobi/utils/AvidTimestamp = Com.Integralads.Avid.Library.Inmobi.Utils.AvidTimestamp
  <init>()V = .ctor()
  getCurrentTime()D = CurrentTime
com/integralads/avid/library/inmobi/video/AvidVideoPlaybackListener = Com.Integralads.Avid.Library.Inmobi.Video.IAvidVideoPlaybackListener
  recordAdClickThruEvent()V = RecordAdClickThruEvent()
  recordAdCompleteEvent()V = RecordAdCompleteEvent()
  recordAdDurationChangeEvent(Ljava/lang/String;Ljava/lang/String;)V = RecordAdDurationChangeEvent(string, string)
  recordAdEnteredFullscreenEvent()V = RecordAdEnteredFullscreenEvent()
  recordAdError(Ljava/lang/String;)V = RecordAdError(string)
  recordAdExitedFullscreenEvent()V = RecordAdExitedFullscreenEvent()
  recordAdExpandedChangeEvent()V = RecordAdExpandedChangeEvent()
  recordAdImpressionEvent()V = RecordAdImpressionEvent()
  recordAdLoadedEvent()V = RecordAdLoadedEvent()
  recordAdPausedEvent()V = RecordAdPausedEvent()
  recordAdPlayingEvent()V = RecordAdPlayingEvent()
  recordAdSkippedEvent()V = RecordAdSkippedEvent()
  recordAdStartedEvent()V = RecordAdStartedEvent()
  recordAdStoppedEvent()V = RecordAdStoppedEvent()
  recordAdUserAcceptInvitationEvent()V = RecordAdUserAcceptInvitationEvent()
  recordAdUserCloseEvent()V = RecordAdUserCloseEvent()
  recordAdUserMinimizeEvent()V = RecordAdUserMinimizeEvent()
  recordAdVideoFirstQuartileEvent()V = RecordAdVideoFirstQuartileEvent()
  recordAdVideoMidpointEvent()V = RecordAdVideoMidpointEvent()
  recordAdVideoStartEvent()V = RecordAdVideoStartEvent()
  recordAdVideoThirdQuartileEvent()V = RecordAdVideoThirdQuartileEvent()
  recordAdVolumeChangeEvent(Ljava/lang/Integer;)V = RecordAdVolumeChangeEvent(Java.Lang.Integer)
com/integralads/avid/library/inmobi/walking/async/AvidCleanupAsyncTask = Com.Integralads.Avid.Library.Inmobi.Walking.Async.AvidCleanupAsyncTask
com/integralads/avid/library/inmobi/walking/async/AvidEmptyPublishAsyncTask = Com.Integralads.Avid.Library.Inmobi.Walking.Async.AvidEmptyPublishAsyncTask
com/integralads/avid/library/inmobi/walking/async/AvidPublishAsyncTask = Com.Integralads.Avid.Library.Inmobi.Walking.Async.AvidPublishAsyncTask
com/integralads/avid/library/inmobi/walking/AvidStatePublisher = Com.Integralads.Avid.Library.Inmobi.Walking.AvidStatePublisher
  getPreviousState()Lorg/json/JSONObject; = PreviousState
  setPreviousState(Lorg/json/JSONObject;)V = PreviousState
  cleanupCache()V = CleanupCache()
  publishEmptyState(Lorg/json/JSONObject;Ljava/util/HashSet;D)V = PublishEmptyState(Org.Json.JSONObject, Java.Util.HashSet, double)
  publishState(Lorg/json/JSONObject;Ljava/util/HashSet;D)V = PublishState(Org.Json.JSONObject, Java.Util.HashSet, double)
com/integralads/avid/library/inmobi/walking/ViewType = Com.Integralads.Avid.Library.Inmobi.Walking.ViewType
  OBSTRUCTION_VIEW = ObstructionView
  ROOT_VIEW = RootView
  UNDERLYING_VIEW = UnderlyingView
  valueOf(Ljava/lang/String;)Lcom/integralads/avid/library/inmobi/walking/ViewType; = ValueOf(string)
  values()[Lcom/integralads/avid/library/inmobi/walking/ViewType; = Values()
com/moat/analytics/mobile/inm/MoatAdEvent = Com.Moat.Analytics.Mobile.Inm.MoatAdEvent
  VOLUME_MUTED = VolumeMuted
  VOLUME_UNMUTED = VolumeUnmuted
com/moat/analytics/mobile/inm/MoatOptions = Com.Moat.Analytics.Mobile.Inm.MoatOptions
  <init>()V = .ctor()
  autoTrackGMAInterstitials = AutoTrackGMAInterstitials
  disableAdIdCollection = DisableAdIdCollection
  disableLocationServices = DisableLocationServices
  loggingEnabled = LoggingEnabled
com/moat/analytics/mobile/inm/NativeDisplayTracker = Com.Moat.Analytics.Mobile.Inm.INativeDisplayTracker
  reportUserInteractionEvent(Lcom/moat/analytics/mobile/inm/NativeDisplayTracker$MoatUserInteractionType;)V = ReportUserInteractionEvent(Com.Moat.Analytics.Mobile.Inm.NativeDisplayTrackerMoatUserInteractionType)
  setActivity(Landroid/app/Activity;)V = SetActivity(Android.App.Activity)
  startTracking()V = StartTracking()
  stopTracking()V = StopTracking()
com/moat/analytics/mobile/inm/NativeVideoTracker = Com.Moat.Analytics.Mobile.Inm.INativeVideoTracker
  changeTargetView(Landroid/view/View;)V = ChangeTargetView(Android.Views.View)
  dispatchEvent(Lcom/moat/analytics/mobile/inm/MoatAdEvent;)V = DispatchEvent(Com.Moat.Analytics.Mobile.Inm.MoatAdEvent)
  setActivity(Landroid/app/Activity;)V = SetActivity(Android.App.Activity)
  setPlayerVolume(Ljava/lang/Double;)V = SetPlayerVolume(Java.Lang.Double)
  stopTracking()V = StopTracking()
  trackVideoAd(Ljava/util/Map;Landroid/media/MediaPlayer;Landroid/view/View;)Z = TrackVideoAd(System.Collections.Generic.IDictionary<string, string>, Android.Media.MediaPlayer, Android.Views.View)
com/moat/analytics/mobile/inm/ReactiveVideoTracker = Com.Moat.Analytics.Mobile.Inm.IReactiveVideoTracker
  changeTargetView(Landroid/view/View;)V = ChangeTargetView(Android.Views.View)
  dispatchEvent(Lcom/moat/analytics/mobile/inm/MoatAdEvent;)V = DispatchEvent(Com.Moat.Analytics.Mobile.Inm.MoatAdEvent)
  setActivity(Landroid/app/Activity;)V = SetActivity(Android.App.Activity)
  setPlayerVolume(Ljava/lang/Double;)V = SetPlayerVolume(Java.Lang.Double)
  stopTracking()V = StopTracking()
  trackVideoAd(Ljava/util/Map;Ljava/lang/Integer;Landroid/view/View;)Z = TrackVideoAd(System.Collections.Generic.IDictionary<string, string>, Java.Lang.Integer, Android.Views.View)
com/moat/analytics/mobile/inm/WebAdTracker = Com.Moat.Analytics.Mobile.Inm.IWebAdTracker
  setActivity(Landroid/app/Activity;)V = SetActivity(Android.App.Activity)
  startTracking()V = StartTracking()
  stopTracking()V = StopTracking()
com/squareup/picasso/Cache = Com.Squareup.Picasso.ICache
  NONE = None
  clear()V = Clear()
  clearKeyUri(Ljava/lang/String;)V = ClearKeyUri(string)
  get(Ljava/lang/String;)Landroid/graphics/Bitmap; = Get(string)
  maxSize()I = MaxSize()
  set(Ljava/lang/String;Landroid/graphics/Bitmap;)V = Set(string, Android.Graphics.Bitmap)
  size()I = Size()
com/squareup/picasso/Callback = Com.Squareup.Picasso.ICallback
  onError()V = OnError()
  onSuccess()V = OnSuccess()
com/squareup/picasso/Downloader = Com.Squareup.Picasso.IDownloader
  load(Landroid/net/Uri;I)Lcom/squareup/picasso/Downloader$Response; = Load(Android.Net.Uri, int)
  shutdown()V = Shutdown()
com/squareup/picasso/LruCache = Com.Squareup.Picasso.LruCache
  <init>(I)V = .ctor(int)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  clear()V = Clear()
  clearKeyUri(Ljava/lang/String;)V = ClearKeyUri(string)
  evictAll()V = EvictAll()
  evictionCount()I = EvictionCount()
  get(Ljava/lang/String;)Landroid/graphics/Bitmap; = Get(string)
  hitCount()I = HitCount()
  maxSize()I = MaxSize()
  missCount()I = MissCount()
  putCount()I = PutCount()
  set(Ljava/lang/String;Landroid/graphics/Bitmap;)V = Set(string, Android.Graphics.Bitmap)
  size()I = Size()
com/squareup/picasso/MemoryPolicy = Com.Squareup.Picasso.MemoryPolicy
  NO_CACHE = NoCache
  NO_STORE = NoStore
  valueOf(Ljava/lang/String;)Lcom/squareup/picasso/MemoryPolicy; = ValueOf(string)
  values()[Lcom/squareup/picasso/MemoryPolicy; = Values()
com/squareup/picasso/NetworkPolicy = Com.Squareup.Picasso.NetworkPolicy
  NO_CACHE = NoCache
  NO_STORE = NoStore
  OFFLINE = Offline
  isOfflineOnly(I)Z = IsOfflineOnly(int)
  shouldReadFromDiskCache(I)Z = ShouldReadFromDiskCache(int)
  shouldWriteToDiskCache(I)Z = ShouldWriteToDiskCache(int)
  valueOf(Ljava/lang/String;)Lcom/squareup/picasso/NetworkPolicy; = ValueOf(string)
  values()[Lcom/squareup/picasso/NetworkPolicy; = Values()
com/squareup/picasso/Picasso = Com.Squareup.Picasso.Picasso
  isDebugging()Z = Debugging
  setDebugging(Z)V = Debugging
  isLoggingEnabled()Z = LoggingEnabled
  setLoggingEnabled(Z)V = LoggingEnabled
  getSnapshot()Lcom/squareup/picasso/StatsSnapshot; = Snapshot
  areIndicatorsEnabled()Z = AreIndicatorsEnabled()
  cancelRequest(Landroid/widget/ImageView;)V = CancelRequest(Android.Widget.ImageView)
  cancelRequest(Landroid/widget/RemoteViews;I)V = CancelRequest(Android.Widget.RemoteViews, int)
  cancelRequest(Lcom/squareup/picasso/Target;)V = CancelRequest(Com.Squareup.Picasso.ITarget)
  cancelTag(Ljava/lang/Object;)V = CancelTag(Java.Lang.Object)
  invalidate(Landroid/net/Uri;)V = Invalidate(Android.Net.Uri)
  invalidate(Ljava/io/File;)V = Invalidate(Java.IO.File)
  invalidate(Ljava/lang/String;)V = Invalidate(string)
  load(Landroid/net/Uri;)Lcom/squareup/picasso/RequestCreator; = Load(Android.Net.Uri)
  load(I)Lcom/squareup/picasso/RequestCreator; = Load(int)
  load(Ljava/io/File;)Lcom/squareup/picasso/RequestCreator; = Load(Java.IO.File)
  load(Ljava/lang/String;)Lcom/squareup/picasso/RequestCreator; = Load(string)
  pauseTag(Ljava/lang/Object;)V = PauseTag(Java.Lang.Object)
  resumeTag(Ljava/lang/Object;)V = ResumeTag(Java.Lang.Object)
  setIndicatorsEnabled(Z)V = SetIndicatorsEnabled(bool)
  setSingletonInstance(Lcom/squareup/picasso/Picasso;)V = SetSingletonInstance(Com.Squareup.Picasso.Picasso)
  shutdown()V = Shutdown()
  with(Landroid/content/Context;)Lcom/squareup/picasso/Picasso; = With(Android.Content.Context)
com/squareup/picasso/Request = Com.Squareup.Picasso.Request
  centerCrop = CenterCrop
  centerInside = CenterInside
  config = Config
  hasRotationPivot = HasRotationPivot
  onlyScaleDown = OnlyScaleDown
  priority = Priority
  resourceId = ResourceId
  rotationDegrees = RotationDegrees
  rotationPivotX = RotationPivotX
  rotationPivotY = RotationPivotY
  stableKey = StableKey
  targetHeight = TargetHeight
  targetWidth = TargetWidth
  transformations = Transformations
  uri = Uri
  hasSize()Z = HasSize
  buildUpon()Lcom/squareup/picasso/Request$Builder; = BuildUpon()
com/squareup/picasso/RequestCreator = Com.Squareup.Picasso.RequestCreator
  centerCrop()Lcom/squareup/picasso/RequestCreator; = CenterCrop()
  centerInside()Lcom/squareup/picasso/RequestCreator; = CenterInside()
  config(Landroid/graphics/Bitmap$Config;)Lcom/squareup/picasso/RequestCreator; = Config(Android.Graphics.Bitmap.Config)
  error(Landroid/graphics/drawable/Drawable;)Lcom/squareup/picasso/RequestCreator; = Error(Android.Graphics.Drawables.Drawable)
  error(I)Lcom/squareup/picasso/RequestCreator; = Error(int)
  fetch()V = Fetch()
  fetch(Lcom/squareup/picasso/Callback;)V = Fetch(Com.Squareup.Picasso.ICallback)
  fit()Lcom/squareup/picasso/RequestCreator; = Fit()
  get()Landroid/graphics/Bitmap; = Get()
  into(Landroid/widget/ImageView;)V = Into(Android.Widget.ImageView)
  into(Landroid/widget/ImageView;Lcom/squareup/picasso/Callback;)V = Into(Android.Widget.ImageView, Com.Squareup.Picasso.ICallback)
  into(Landroid/widget/RemoteViews;IILandroid/app/Notification;)V = Into(Android.Widget.RemoteViews, int, int, Android.App.Notification)
  into(Landroid/widget/RemoteViews;I[I)V = Into(Android.Widget.RemoteViews, int, int[])
  into(Lcom/squareup/picasso/Target;)V = Into(Com.Squareup.Picasso.ITarget)
  memoryPolicy(Lcom/squareup/picasso/MemoryPolicy;[Lcom/squareup/picasso/MemoryPolicy;)Lcom/squareup/picasso/RequestCreator; = MemoryPolicy(Com.Squareup.Picasso.MemoryPolicy, params Com.Squareup.Picasso.MemoryPolicy[])
  networkPolicy(Lcom/squareup/picasso/NetworkPolicy;[Lcom/squareup/picasso/NetworkPolicy;)Lcom/squareup/picasso/RequestCreator; = NetworkPolicy(Com.Squareup.Picasso.NetworkPolicy, params Com.Squareup.Picasso.NetworkPolicy[])
  noFade()Lcom/squareup/picasso/RequestCreator; = NoFade()
  noPlaceholder()Lcom/squareup/picasso/RequestCreator; = NoPlaceholder()
  onlyScaleDown()Lcom/squareup/picasso/RequestCreator; = OnlyScaleDown()
  placeholder(Landroid/graphics/drawable/Drawable;)Lcom/squareup/picasso/RequestCreator; = Placeholder(Android.Graphics.Drawables.Drawable)
  placeholder(I)Lcom/squareup/picasso/RequestCreator; = Placeholder(int)
  priority(Lcom/squareup/picasso/Picasso$Priority;)Lcom/squareup/picasso/RequestCreator; = Priority(Com.Squareup.Picasso.Picasso.Priority)
  resize(II)Lcom/squareup/picasso/RequestCreator; = Resize(int, int)
  resizeDimen(II)Lcom/squareup/picasso/RequestCreator; = ResizeDimen(int, int)
  rotate(F)Lcom/squareup/picasso/RequestCreator; = Rotate(float)
  rotate(FFF)Lcom/squareup/picasso/RequestCreator; = Rotate(float, float, float)
  skipMemoryCache()Lcom/squareup/picasso/RequestCreator; = SkipMemoryCache()
  stableKey(Ljava/lang/String;)Lcom/squareup/picasso/RequestCreator; = StableKey(string)
  tag(Ljava/lang/Object;)Lcom/squareup/picasso/RequestCreator; = Tag(Java.Lang.Object)
  transform(Lcom/squareup/picasso/Transformation;)Lcom/squareup/picasso/RequestCreator; = Transform(Com.Squareup.Picasso.ITransformation)
  transform(Ljava/util/List;)Lcom/squareup/picasso/RequestCreator; = Transform(System.Collections.Generic.IList<Com.Squareup.Picasso.ITransformation>)
com/squareup/picasso/RequestHandler = Com.Squareup.Picasso.RequestHandler
  <init>()V = .ctor()
  canHandleRequest(Lcom/squareup/picasso/Request;)Z = CanHandleRequest(Com.Squareup.Picasso.Request)
  load(Lcom/squareup/picasso/Request;I)Lcom/squareup/picasso/RequestHandler$Result; = Load(Com.Squareup.Picasso.Request, int)
com/squareup/picasso/StatsSnapshot = Com.Squareup.Picasso.StatsSnapshot
  <init>(IIJJJJJJJJIIIJ)V = .ctor(int, int, long, long, long, long, long, long, long, long, int, int, int, long)
  averageDownloadSize = AverageDownloadSize
  averageOriginalBitmapSize = AverageOriginalBitmapSize
  averageTransformedBitmapSize = AverageTransformedBitmapSize
  cacheHits = CacheHits
  cacheMisses = CacheMisses
  downloadCount = DownloadCount
  maxSize = MaxSize
  originalBitmapCount = OriginalBitmapCount
  size = Size
  timeStamp = TimeStamp
  totalDownloadSize = TotalDownloadSize
  totalOriginalBitmapSize = TotalOriginalBitmapSize
  totalTransformedBitmapSize = TotalTransformedBitmapSize
  transformedBitmapCount = TransformedBitmapCount
  dump()V = Dump()
  dump(Ljava/io/PrintWriter;)V = Dump(Java.IO.PrintWriter)
com/squareup/picasso/Target = Com.Squareup.Picasso.ITarget
  onBitmapFailed(Landroid/graphics/drawable/Drawable;)V = OnBitmapFailed(Android.Graphics.Drawables.Drawable)
  onBitmapLoaded(Landroid/graphics/Bitmap;Lcom/squareup/picasso/Picasso$LoadedFrom;)V = OnBitmapLoaded(Android.Graphics.Bitmap, Com.Squareup.Picasso.Picasso.LoadedFrom)
  onPrepareLoad(Landroid/graphics/drawable/Drawable;)V = OnPrepareLoad(Android.Graphics.Drawables.Drawable)
com/squareup/picasso/Transformation = Com.Squareup.Picasso.ITransformation
  key()Ljava/lang/String; = Key()
  transform(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap; = Transform(Android.Graphics.Bitmap)
com/squareup/picasso/UrlConnectionDownloader = Com.Squareup.Picasso.UrlConnectionDownloader
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  load(Landroid/net/Uri;I)Lcom/squareup/picasso/Downloader$Response; = Load(Android.Net.Uri, int)
  openConnection(Landroid/net/Uri;)Ljava/net/HttpURLConnection; = OpenConnection(Android.Net.Uri)
  shutdown()V = Shutdown()
