com/mopub/common/AdFormat = com.mopub.common.AdFormat
  BANNER = Banner
  INTERSTITIAL = Interstitial
  NATIVE = Native
  REWARDED_VIDEO = RewardedVideo
  valueOf(Ljava/lang/String;)Lcom/mopub/common/AdFormat; = ValueOf(string)
  values()[Lcom/mopub/common/AdFormat; = Values()
com/mopub/common/AdReport = com.mopub.common.AdReport
  getResponseString()Ljava/lang/String; = ResponseString
com/mopub/common/AdType = com.mopub.common.AdType
  <init>()V = .ctor()
  CLEAR = Clear
  CUSTOM = Custom
  HTML = Html
  INTERSTITIAL = Interstitial
  MRAID = Mraid
  STATIC_NATIVE = StaticNative
  VIDEO_NATIVE = VideoNative
com/mopub/common/AdUrlGenerator = com.mopub.common.AdUrlGenerator
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  mAdUnitId = MAdUnitId
  mContext = MContext
  mKeywords = MKeywords
  mLocation = MLocation
  addBaseParams(Lcom/mopub/common/ClientMetadata;)V = AddBaseParams(com.mopub.common.ClientMetadata)
  setAdUnitId(Ljava/lang/String;)V = SetAdUnitId(string)
  setBundleId(Ljava/lang/String;)V = SetBundleId(string)
  setCarrierName(Ljava/lang/String;)V = SetCarrierName(string)
  setDensity(F)V = SetDensity(float)
  setIsoCountryCode(Ljava/lang/String;)V = SetIsoCountryCode(string)
  setKeywords(Ljava/lang/String;)V = SetKeywords(string)
  setLocation(Landroid/location/Location;)V = SetLocation(Android.Locations.Location)
  setMccCode(Ljava/lang/String;)V = SetMccCode(string)
  setMncCode(Ljava/lang/String;)V = SetMncCode(string)
  setMraidFlag(Z)V = SetMraidFlag(bool)
  setNetworkType(Lcom/mopub/common/ClientMetadata$MoPubNetworkType;)V = SetNetworkType(com.mopub.common.ClientMetadata.MoPubNetworkType)
  setOrientation(Ljava/lang/String;)V = SetOrientation(string)
  setSdkVersion(Ljava/lang/String;)V = SetSdkVersion(string)
  setTimezone(Ljava/lang/String;)V = SetTimezone(string)
  withAdUnitId(Ljava/lang/String;)Lcom/mopub/common/AdUrlGenerator; = WithAdUnitId(string)
  withFacebookSupported(Z)Lcom/mopub/common/AdUrlGenerator; = WithFacebookSupported(bool)
  withKeywords(Ljava/lang/String;)Lcom/mopub/common/AdUrlGenerator; = WithKeywords(string)
  withLocation(Landroid/location/Location;)Lcom/mopub/common/AdUrlGenerator; = WithLocation(Android.Locations.Location)
com/mopub/common/BaseLifecycleListener = com.mopub.common.BaseLifecycleListener
  <init>()V = .ctor()
  onBackPressed(Landroid/app/Activity;)V = OnBackPressed(Android.App.Activity)
  onCreate(Landroid/app/Activity;)V = OnCreate(Android.App.Activity)
  onDestroy(Landroid/app/Activity;)V = OnDestroy(Android.App.Activity)
  onPause(Landroid/app/Activity;)V = OnPause(Android.App.Activity)
  onRestart(Landroid/app/Activity;)V = OnRestart(Android.App.Activity)
  onResume(Landroid/app/Activity;)V = OnResume(Android.App.Activity)
  onStart(Landroid/app/Activity;)V = OnStart(Android.App.Activity)
  onStop(Landroid/app/Activity;)V = OnStop(Android.App.Activity)
com/mopub/common/BaseUrlGenerator = com.mopub.common.BaseUrlGenerator
  <init>()V = .ctor()
  getFinalUrlString()Ljava/lang/String; = FinalUrlString
  addParam(Ljava/lang/String;Ljava/lang/String;)V = AddParam(string, string)
  appendAdvertisingInfoTemplates()V = AppendAdvertisingInfoTemplates()
  generateUrlString(Ljava/lang/String;)Ljava/lang/String; = GenerateUrlString(string)
  initUrlString(Ljava/lang/String;Ljava/lang/String;)V = InitUrlString(string, string)
  setApiVersion(Ljava/lang/String;)V = SetApiVersion(string)
  setAppVersion(Ljava/lang/String;)V = SetAppVersion(string)
  setDeviceDimensions(Landroid/graphics/Point;)V = SetDeviceDimensions(Android.Graphics.Point)
  setDeviceInfo([Ljava/lang/String;)V = SetDeviceInfo(params string[])
  setDoNotTrack(Z)V = SetDoNotTrack(bool)
  setExternalStoragePermission(Z)V = SetExternalStoragePermission(bool)
  setUdid(Ljava/lang/String;)V = SetUdid(string)
com/mopub/common/CacheService = com.mopub.common.CacheService
  <init>()V = .ctor()
  getDiskLruCache()Lcom/mopub/common/DiskLruCache; = DiskLruCache
  clearAndNullCaches()V = ClearAndNullCaches()
  containsKeyDiskCache(Ljava/lang/String;)Z = ContainsKeyDiskCache(string)
  createValidDiskCacheKey(Ljava/lang/String;)Ljava/lang/String; = CreateValidDiskCacheKey(string)
  getDiskCacheDirectory(Landroid/content/Context;)Ljava/io/File; = GetDiskCacheDirectory(Android.Content.Context)
  getFilePathDiskCache(Ljava/lang/String;)Ljava/lang/String; = GetFilePathDiskCache(string)
  getFromDiskCache(Ljava/lang/String;)[B = GetFromDiskCache(string)
  getFromDiskCacheAsync(Ljava/lang/String;Lcom/mopub/common/CacheService$DiskLruCacheGetListener;)V = GetFromDiskCacheAsync(string, com.mopub.common.CacheService.IDiskLruCacheGetListener)
  initialize(Landroid/content/Context;)V = Initialize(Android.Content.Context)
  initializeDiskCache(Landroid/content/Context;)Z = InitializeDiskCache(Android.Content.Context)
  putToDiskCache(Ljava/lang/String;[B)Z = PutToDiskCache(string, byte[])
  putToDiskCache(Ljava/lang/String;Ljava/io/InputStream;)Z = PutToDiskCache(string, System.IO.Stream)
  putToDiskCacheAsync(Ljava/lang/String;[B)V = PutToDiskCacheAsync(string, byte[])
com/mopub/common/ClientMetadata = com.mopub.common.ClientMetadata
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getActiveNetworkType()Lcom/mopub/common/ClientMetadata$MoPubNetworkType; = ActiveNetworkType
  getAppName()Ljava/lang/String; = AppName
  getAppPackageName()Ljava/lang/String; = AppPackageName
  getAppVersion()Ljava/lang/String; = AppVersion
  getDensity()F = Density
  getDeviceDimensions()Landroid/graphics/Point; = DeviceDimensions
  getDeviceId()Ljava/lang/String; = DeviceId
  getDeviceLocale()Ljava/util/Locale; = DeviceLocale
  getDeviceManufacturer()Ljava/lang/String; = DeviceManufacturer
  getDeviceModel()Ljava/lang/String; = DeviceModel
  getDeviceOsVersion()Ljava/lang/String; = DeviceOsVersion
  getDeviceProduct()Ljava/lang/String; = DeviceProduct
  getDeviceScreenHeightDip()I = DeviceScreenHeightDip
  getDeviceScreenWidthDip()I = DeviceScreenWidthDip
  getInstance()Lcom/mopub/common/ClientMetadata; = Instance
  setInstance(Lcom/mopub/common/ClientMetadata;)V = Instance
  isAdvertisingInfoSet()Z = IsAdvertisingInfoSet
  isDoNotTrackSet()Z = IsDoNotTrackSet
  getIsoCountryCode()Ljava/lang/String; = IsoCountryCode
  getNetworkOperator()Ljava/lang/String; = NetworkOperator
  getNetworkOperatorForUrl()Ljava/lang/String; = NetworkOperatorForUrl
  getNetworkOperatorName()Ljava/lang/String; = NetworkOperatorName
  getOrientationString()Ljava/lang/String; = OrientationString
  getSdkVersion()Ljava/lang/String; = SdkVersion
  getSimIsoCountryCode()Ljava/lang/String; = SimIsoCountryCode
  getSimOperator()Ljava/lang/String; = SimOperator
  getSimOperatorName()Ljava/lang/String; = SimOperatorName
  clearForTesting()V = ClearForTesting()
  getInstance(Landroid/content/Context;)Lcom/mopub/common/ClientMetadata; = GetInstance(Android.Content.Context)
  setAdvertisingInfo(Ljava/lang/String;Z)V = SetAdvertisingInfo(string, bool)
com/mopub/common/CloseableLayout = com.mopub.common.CloseableLayout
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  isCloseVisible()Z = CloseVisible
  setCloseVisible(Z)V = CloseVisible
  applyCloseRegionBounds(Lcom/mopub/common/CloseableLayout$ClosePosition;Landroid/graphics/Rect;Landroid/graphics/Rect;)V = ApplyCloseRegionBounds(com.mopub.common.CloseableLayout.ClosePosition, Android.Graphics.Rect, Android.Graphics.Rect)
  setClosePosition(Lcom/mopub/common/CloseableLayout$ClosePosition;)V = SetClosePosition(com.mopub.common.CloseableLayout.ClosePosition)
  setOnCloseListener(Lcom/mopub/common/CloseableLayout$OnCloseListener;)V = SetOnCloseListener(com.mopub.common.CloseableLayout.IOnCloseListener)
com/mopub/common/Constants = com.mopub.common.Constants
  AD_HANDLER = AdHandler
  CONVERSION_TRACKING_HANDLER = ConversionTrackingHandler
  HOST = Host
  HTTP = Http
  HTTPS = Https
  POSITIONING_HANDLER = PositioningHandler
  TEN_MB = TenMb
  TEN_SECONDS_MILLIS = TenSecondsMillis
  THIRTY_SECONDS_MILLIS = ThirtySecondsMillis
com/mopub/common/CreativeOrientation = com.mopub.common.CreativeOrientation
  LANDSCAPE = Landscape
  PORTRAIT = Portrait
  UNDEFINED = Undefined
  fromHeader(Ljava/lang/String;)Lcom/mopub/common/CreativeOrientation; = FromHeader(string)
  valueOf(Ljava/lang/String;)Lcom/mopub/common/CreativeOrientation; = ValueOf(string)
  values()[Lcom/mopub/common/CreativeOrientation; = Values()
com/mopub/common/DataKeys = com.mopub.common.DataKeys
  <init>()V = .ctor()
  AD_HEIGHT = AdHeight
  AD_REPORT_KEY = AdReportKey
  AD_UNIT_ID_KEY = AdUnitIdKey
  AD_WIDTH = AdWidth
  BROADCAST_IDENTIFIER_KEY = BroadcastIdentifierKey
  CLICKTHROUGH_URL_KEY = ClickthroughUrlKey
  CLICK_TRACKING_URL_KEY = ClickTrackingUrlKey
  CREATIVE_ORIENTATION_KEY = CreativeOrientationKey
  EVENT_DETAILS = EventDetails
  HTML_RESPONSE_BODY_KEY = HtmlResponseBodyKey
  IMPRESSION_MIN_VISIBLE_PERCENT = ImpressionMinVisiblePercent
  IMPRESSION_VISIBLE_MS = ImpressionVisibleMs
  JSON_BODY_KEY = JsonBodyKey
  MAX_BUFFER_MS = MaxBufferMs
  PAUSE_VISIBLE_PERCENT = PauseVisiblePercent
  PLAY_VISIBLE_PERCENT = PlayVisiblePercent
  REDIRECT_URL_KEY = RedirectUrlKey
  SCROLLABLE_KEY = ScrollableKey
com/mopub/common/DiskLruCache = com.mopub.common.DiskLruCache
  getDirectory()Ljava/io/File; = Directory
  isClosed()Z = IsClosed
  getMaxSize()J = MaxSize
  setMaxSize(J)V = MaxSize
  close()V = Close()
  delete()V = Delete()
  edit(Ljava/lang/String;)Lcom/mopub/common/DiskLruCache$Editor; = Edit(string)
  flush()V = Flush()
  get(Ljava/lang/String;)Lcom/mopub/common/DiskLruCache$Snapshot; = Get(string)
  open(Ljava/io/File;IIJ)Lcom/mopub/common/DiskLruCache; = Open(Java.IO.File, int, int, long)
  remove(Ljava/lang/String;)Z = Remove(string)
  size()J = Size()
com/mopub/common/DiskLruCacheUtil = com.mopub.common.DiskLruCacheUtil
com/mopub/common/event/BaseEvent = com.mopub.common.events.BaseEvent
  <init>(Lcom/mopub/common/event/BaseEvent$Builder;)V = .ctor(com.mopub.common.events.BaseEvent.Builder)
  getAdCreativeId()Ljava/lang/String; = AdCreativeId
  getAdHeightPx()Ljava/lang/Double; = AdHeightPx
  getAdNetworkType()Ljava/lang/String; = AdNetworkType
  getAdType()Ljava/lang/String; = AdType
  getAdUnitId()Ljava/lang/String; = AdUnitId
  getAdWidthPx()Ljava/lang/Double; = AdWidthPx
  getAppName()Ljava/lang/String; = AppName
  getAppPackageName()Ljava/lang/String; = AppPackageName
  getAppVersion()Ljava/lang/String; = AppVersion
  getClientAdvertisingId()Ljava/lang/String; = ClientAdvertisingId
  getClientDoNotTrack()Ljava/lang/Boolean; = ClientDoNotTrack
  getDeviceManufacturer()Ljava/lang/String; = DeviceManufacturer
  getDeviceModel()Ljava/lang/String; = DeviceModel
  getDeviceOsVersion()Ljava/lang/String; = DeviceOsVersion
  getDeviceProduct()Ljava/lang/String; = DeviceProduct
  getDeviceScreenHeightDip()Ljava/lang/Integer; = DeviceScreenHeightDip
  getDeviceScreenWidthDip()Ljava/lang/Integer; = DeviceScreenWidthDip
  getGeoAccuracy()Ljava/lang/Double; = GeoAccuracy
  getGeoLat()Ljava/lang/Double; = GeoLat
  getGeoLon()Ljava/lang/Double; = GeoLon
  getNetworkIsoCountryCode()Ljava/lang/String; = NetworkIsoCountryCode
  getNetworkOperatorCode()Ljava/lang/String; = NetworkOperatorCode
  getNetworkOperatorName()Ljava/lang/String; = NetworkOperatorName
  getNetworkSimCode()Ljava/lang/String; = NetworkSimCode
  getNetworkSimIsoCountryCode()Ljava/lang/String; = NetworkSimIsoCountryCode
  getNetworkSimOperatorName()Ljava/lang/String; = NetworkSimOperatorName
  getNetworkType()Lcom/mopub/common/ClientMetadata$MoPubNetworkType; = NetworkType
  getObfuscatedClientAdvertisingId()Ljava/lang/String; = ObfuscatedClientAdvertisingId
  getPerformanceDurationMs()Ljava/lang/Double; = PerformanceDurationMs
  getRequestId()Ljava/lang/String; = RequestId
  getRequestRetries()Ljava/lang/Integer; = RequestRetries
  getRequestStatusCode()Ljava/lang/Integer; = RequestStatusCode
  getRequestUri()Ljava/lang/String; = RequestUri
  getSdkVersion()Ljava/lang/String; = SdkVersion
  getTimestampUtcMs()Ljava/lang/Long; = TimestampUtcMs
  getAppPlatform()Lcom/mopub/common/event/BaseEvent$AppPlatform; = GetAppPlatform()
  getCategory()Lcom/mopub/common/event/BaseEvent$Category; = GetCategory()
  getName()Lcom/mopub/common/event/BaseEvent$Name; = GetName()
  getSamplingRate()D = GetSamplingRate()
  getScribeCategory()Lcom/mopub/common/event/BaseEvent$ScribeCategory; = GetScribeCategory()
  getSdkProduct()Lcom/mopub/common/event/BaseEvent$SdkProduct; = GetSdkProduct()
com/mopub/common/event/ErrorEvent = com.mopub.common.events.ErrorEvent
  getErrorClassName()Ljava/lang/String; = ErrorClassName
  getErrorExceptionClassName()Ljava/lang/String; = ErrorExceptionClassName
  getErrorFileName()Ljava/lang/String; = ErrorFileName
  getErrorLineNumber()Ljava/lang/Integer; = ErrorLineNumber
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  getErrorMethodName()Ljava/lang/String; = ErrorMethodName
  getErrorStackTrace()Ljava/lang/String; = ErrorStackTrace
com/mopub/common/event/Event = com.mopub.common.events.Event
  createEventFromDetails(Lcom/mopub/common/event/BaseEvent$Name;Lcom/mopub/common/event/BaseEvent$Category;Lcom/mopub/common/event/BaseEvent$SamplingRate;Lcom/mopub/common/event/EventDetails;)Lcom/mopub/common/event/BaseEvent; = CreateEventFromDetails(com.mopub.common.events.BaseEvent.Name, com.mopub.common.events.BaseEvent.Category, com.mopub.common.events.BaseEvent.SamplingRate, com.mopub.common.events.EventDetails)
com/mopub/common/event/EventDetails = com.mopub.common.events.EventDetails
  getAdHeightPx()Ljava/lang/Double; = AdHeightPx
  getAdNetworkType()Ljava/lang/String; = AdNetworkType
  getAdType()Ljava/lang/String; = AdType
  getAdUnitId()Ljava/lang/String; = AdUnitId
  getAdWidthPx()Ljava/lang/Double; = AdWidthPx
  getDspCreativeId()Ljava/lang/String; = DspCreativeId
  getGeoAccuracy()Ljava/lang/Double; = GeoAccuracy
  getGeoLatitude()Ljava/lang/Double; = GeoLatitude
  getGeoLongitude()Ljava/lang/Double; = GeoLongitude
  getPerformanceDurationMs()Ljava/lang/Double; = PerformanceDurationMs
  getRequestId()Ljava/lang/String; = RequestId
  getRequestStatusCode()Ljava/lang/Integer; = RequestStatusCode
  getRequestUri()Ljava/lang/String; = RequestUri
  toJsonString()Ljava/lang/String; = ToJsonString()
com/mopub/common/event/EventDispatcher = com.mopub.common.events.EventDispatcher
  dispatch(Lcom/mopub/common/event/BaseEvent;)V = Dispatch(com.mopub.common.events.BaseEvent)
com/mopub/common/event/EventRecorder = com.mopub.common.events.IEventRecorder
  record(Lcom/mopub/common/event/BaseEvent;)V = Record(com.mopub.common.events.BaseEvent)
com/mopub/common/event/EventSampler = com.mopub.common.events.EventSampler
  <init>()V = .ctor()
  <init>(Ljava/util/Random;)V = .ctor(Java.Util.Random)
com/mopub/common/event/MoPubEvents = com.mopub.common.events.MoPubEvents
  <init>()V = .ctor()
  log(Lcom/mopub/common/event/BaseEvent;)V = Log(com.mopub.common.events.BaseEvent)
  setEventDispatcher(Lcom/mopub/common/event/EventDispatcher;)V = SetEventDispatcher(com.mopub.common.events.EventDispatcher)
com/mopub/common/event/ScribeEventRecorder = com.mopub.common.events.ScribeEventRecorder
  record(Lcom/mopub/common/event/BaseEvent;)V = Record(com.mopub.common.events.BaseEvent)
com/mopub/common/GpsHelper = com.mopub.common.GpsHelper
  <init>()V = .ctor()
  ADVERTISING_ID_KEY = AdvertisingIdKey
  GOOGLE_PLAY_SUCCESS_CODE = GooglePlaySuccessCode
  IS_LIMIT_AD_TRACKING_ENABLED_KEY = IsLimitAdTrackingEnabledKey
  fetchAdvertisingInfoAsync(Landroid/content/Context;Lcom/mopub/common/GpsHelper$GpsHelperListener;)V = FetchAdvertisingInfoAsync(Android.Content.Context, com.mopub.common.GpsHelper.IGpsHelperListener)
  fetchAdvertisingInfoSync(Landroid/content/Context;)Lcom/mopub/common/GpsHelper$AdvertisingInfo; = FetchAdvertisingInfoSync(Android.Content.Context)
  isLimitAdTrackingEnabled(Landroid/content/Context;)Z = IsLimitAdTrackingEnabled(Android.Content.Context)
  isPlayServicesAvailable(Landroid/content/Context;)Z = IsPlayServicesAvailable(Android.Content.Context)
  setClassNamesForTesting()V = SetClassNamesForTesting()
com/mopub/common/HttpResponses = com.mopub.common.HttpResponses
com/mopub/common/LifecycleListener = com.mopub.common.ILifecycleListener
  onBackPressed(Landroid/app/Activity;)V = OnBackPressed(Android.App.Activity)
  onCreate(Landroid/app/Activity;)V = OnCreate(Android.App.Activity)
  onDestroy(Landroid/app/Activity;)V = OnDestroy(Android.App.Activity)
  onPause(Landroid/app/Activity;)V = OnPause(Android.App.Activity)
  onRestart(Landroid/app/Activity;)V = OnRestart(Android.App.Activity)
  onResume(Landroid/app/Activity;)V = OnResume(Android.App.Activity)
  onStart(Landroid/app/Activity;)V = OnStart(Android.App.Activity)
  onStop(Landroid/app/Activity;)V = OnStop(Android.App.Activity)
com/mopub/common/LocationService = com.mopub.common.LocationService
  <init>()V = .ctor()
  getLastKnownLocation(Landroid/content/Context;ILcom/mopub/common/MoPub$LocationAwareness;)Landroid/location/Location; = GetLastKnownLocation(Android.Content.Context, int, com.mopub.common.MoPub.LocationAwareness)
com/mopub/common/MediationSettings = com.mopub.common.IMediationSettings
com/mopub/common/MoPub = com.mopub.common.MoPub
  <init>()V = .ctor()
  SDK_VERSION = SdkVersion
  getLocationPrecision()I = LocationPrecision
  setLocationPrecision(I)V = LocationPrecision
  getLocationAwareness()Lcom/mopub/common/MoPub$LocationAwareness; = GetLocationAwareness()
  hasRewardedVideo(Ljava/lang/String;)Z = HasRewardedVideo(string)
  initializeRewardedVideo(Landroid/app/Activity;[Lcom/mopub/common/MediationSettings;)V = InitializeRewardedVideo(Android.App.Activity, params com.mopub.common.IMediationSettings[])
  loadRewardedVideo(Ljava/lang/String;[Lcom/mopub/common/MediationSettings;)V = LoadRewardedVideo(string, params com.mopub.common.IMediationSettings[])
  onBackPressed(Landroid/app/Activity;)V = OnBackPressed(Android.App.Activity)
  onCreate(Landroid/app/Activity;)V = OnCreate(Android.App.Activity)
  onDestroy(Landroid/app/Activity;)V = OnDestroy(Android.App.Activity)
  onPause(Landroid/app/Activity;)V = OnPause(Android.App.Activity)
  onRestart(Landroid/app/Activity;)V = OnRestart(Android.App.Activity)
  onResume(Landroid/app/Activity;)V = OnResume(Android.App.Activity)
  onStart(Landroid/app/Activity;)V = OnStart(Android.App.Activity)
  onStop(Landroid/app/Activity;)V = OnStop(Android.App.Activity)
  setLocationAwareness(Lcom/mopub/common/MoPub$LocationAwareness;)V = SetLocationAwareness(com.mopub.common.MoPub.LocationAwareness)
  setRewardedVideoListener(Lcom/mopub/mobileads/MoPubRewardedVideoListener;)V = SetRewardedVideoListener(com.mopub.mobileads.IMoPubRewardedVideoListener)
  showRewardedVideo(Ljava/lang/String;)V = ShowRewardedVideo(string)
com/mopub/common/MoPubBrowser = com.mopub.common.MoPubBrowser
  <init>()V = .ctor()
  DESTINATION_URL_KEY = DestinationUrlKey
  MOPUB_BROWSER_REQUEST_CODE = MopubBrowserRequestCode
  getBackButton()Landroid/widget/ImageButton; = BackButton
  getCloseButton()Landroid/widget/ImageButton; = CloseButton
  getForwardButton()Landroid/widget/ImageButton; = ForwardButton
  getRefreshButton()Landroid/widget/ImageButton; = RefreshButton
  getWebView()Landroid/webkit/WebView; = WebView
  onCreate(Landroid/os/Bundle;)V = OnCreate(Android.OS.Bundle)
  open(Landroid/content/Context;Ljava/lang/String;)V = Open(Android.Content.Context, string)
com/mopub/common/MoPubHttpUrlConnection = com.mopub.common.MoPubHttpUrlConnection
  getHttpUrlConnection(Ljava/lang/String;)Ljava/net/HttpURLConnection; = GetHttpUrlConnection(string)
  urlEncode(Ljava/lang/String;)Ljava/lang/String; = UrlEncode(string)
com/mopub/common/MoPubLifecycleManager = com.mopub.common.MoPubLifecycleManager
  addLifecycleListener(Lcom/mopub/common/LifecycleListener;)V = AddLifecycleListener(com.mopub.common.ILifecycleListener)
  getInstance(Landroid/app/Activity;)Lcom/mopub/common/MoPubLifecycleManager; = GetInstance(Android.App.Activity)
  onBackPressed(Landroid/app/Activity;)V = OnBackPressed(Android.App.Activity)
  onCreate(Landroid/app/Activity;)V = OnCreate(Android.App.Activity)
  onDestroy(Landroid/app/Activity;)V = OnDestroy(Android.App.Activity)
  onPause(Landroid/app/Activity;)V = OnPause(Android.App.Activity)
  onRestart(Landroid/app/Activity;)V = OnRestart(Android.App.Activity)
  onResume(Landroid/app/Activity;)V = OnResume(Android.App.Activity)
  onStart(Landroid/app/Activity;)V = OnStart(Android.App.Activity)
  onStop(Landroid/app/Activity;)V = OnStop(Android.App.Activity)
com/mopub/common/MoPubReward = com.mopub.common.MoPubReward
  NO_REWARD_AMOUNT = NoRewardAmount
  NO_REWARD_LABEL = NoRewardLabel
  getAmount()I = Amount
  isSuccessful()Z = IsSuccessful
  getLabel()Ljava/lang/String; = Label
  failure()Lcom/mopub/common/MoPubReward; = Failure()
  success(Ljava/lang/String;I)Lcom/mopub/common/MoPubReward; = Success(string, int)
com/mopub/common/Preconditions = com.mopub.common.Preconditions
  EMPTY_ARGUMENTS = EmptyArguments
  checkArgument(Z)V = CheckArgument(bool)
  checkArgument(ZLjava/lang/String;)V = CheckArgument(bool, string)
  checkArgument(ZLjava/lang/String;[Ljava/lang/Object;)V = CheckArgument(bool, string, params Java.Lang.Object[])
  checkNotNull(Ljava/lang/Object;)V = CheckNotNull(Java.Lang.Object)
  checkNotNull(Ljava/lang/Object;Ljava/lang/String;)V = CheckNotNull(Java.Lang.Object, string)
  checkNotNull(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V = CheckNotNull(Java.Lang.Object, string, params Java.Lang.Object[])
  checkState(Z)V = CheckState(bool)
  checkState(ZLjava/lang/String;)V = CheckState(bool, string)
  checkState(ZLjava/lang/String;[Ljava/lang/Object;)V = CheckState(bool, string, params Java.Lang.Object[])
  checkUiThread()V = CheckUiThread()
  checkUiThread(Ljava/lang/String;)V = CheckUiThread(string)
  checkUiThread(Ljava/lang/String;[Ljava/lang/Object;)V = CheckUiThread(string, params Java.Lang.Object[])
com/mopub/common/SharedPreferencesHelper = com.mopub.common.SharedPreferencesHelper
  PREFERENCE_NAME = PreferenceName
  getSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences; = GetSharedPreferences(Android.Content.Context)
com/mopub/common/UrlAction = com.mopub.common.UrlAction
  FOLLOW_DEEP_LINK = FollowDeepLink
  FOLLOW_DEEP_LINK_WITH_FALLBACK = FollowDeepLinkWithFallback
  HANDLE_MOPUB_SCHEME = HandleMopubScheme
  HANDLE_PHONE_SCHEME = HandlePhoneScheme
  HANDLE_SHARE_TWEET = HandleShareTweet
  IGNORE_ABOUT_SCHEME = IgnoreAboutScheme
  NOOP = Noop
  OPEN_APP_MARKET = OpenAppMarket
  OPEN_IN_APP_BROWSER = OpenInAppBrowser
  OPEN_NATIVE_BROWSER = OpenNativeBrowser
  handleUrl(Lcom/mopub/common/UrlHandler;Landroid/content/Context;Landroid/net/Uri;Z)V = HandleUrl(com.mopub.common.UrlHandler, Android.Content.Context, Android.Net.Uri, bool)
  performAction(Landroid/content/Context;Landroid/net/Uri;Lcom/mopub/common/UrlHandler;)V = PerformAction(Android.Content.Context, Android.Net.Uri, com.mopub.common.UrlHandler)
  shouldTryHandlingUrl(Landroid/net/Uri;)Z = ShouldTryHandlingUrl(Android.Net.Uri)
  valueOf(Ljava/lang/String;)Lcom/mopub/common/UrlAction; = ValueOf(string)
  values()[Lcom/mopub/common/UrlAction; = Values()
com/mopub/common/UrlHandler = com.mopub.common.UrlHandler
  handleResolvedUrl(Landroid/content/Context;Ljava/lang/String;ZLjava/lang/Iterable;)Z = HandleResolvedUrl(Android.Content.Context, string, bool, Java.Lang.IIterable)
  handleUrl(Landroid/content/Context;Ljava/lang/String;)V = HandleUrl(Android.Content.Context, string)
  handleUrl(Landroid/content/Context;Ljava/lang/String;Z)V = HandleUrl(Android.Content.Context, string, bool)
  handleUrl(Landroid/content/Context;Ljava/lang/String;ZLjava/lang/Iterable;)V = HandleUrl(Android.Content.Context, string, bool, Java.Lang.IIterable)
com/mopub/common/VisibleForTesting = com.mopub.common.IVisibleForTesting
com/mopub/exceptions/IntentNotResolvableException = MoPub.Exceptions.IntentNotResolvableException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/mopub/exceptions/UrlParseException = MoPub.Exceptions.UrlParseException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/mopub/mobileads/AdAlertGestureListener = com.mopub.mobileads.AdAlertGestureListener
com/mopub/mobileads/AdAlertReporter = com.mopub.mobileads.AdAlertReporter
  <init>(Landroid/content/Context;Landroid/view/View;Lcom/mopub/common/AdReport;)V = .ctor(Android.Content.Context, Android.Views.View, com.mopub.common.AdReport)
  send()V = Send()
com/mopub/mobileads/AdRequestStatusMapping = com.mopub.mobileads.AdRequestStatusMapping
  <init>()V = .ctor()
com/mopub/mobileads/AdTypeTranslator = com.mopub.mobileads.AdTypeTranslator
  <init>()V = .ctor()
  BANNER_SUFFIX = BannerSuffix
  INTERSTITIAL_SUFFIX = InterstitialSuffix
  getCustomEventName(Lcom/mopub/common/AdFormat;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String; = GetCustomEventName(com.mopub.common.AdFormat, string, string, System.Collections.Generic.IDictionary<string, string>)
com/mopub/mobileads/AdViewController = com.mopub.mobileads.AdViewController
  <init>(Landroid/content/Context;Lcom/mopub/mobileads/MoPubView;)V = .ctor(Android.Content.Context, com.mopub.mobileads.MoPubView)
  getAdHeight()I = AdHeight
  getAdReport()Lcom/mopub/common/AdReport; = AdReport
  getAdUnitId()Ljava/lang/String; = AdUnitId
  setAdUnitId(Ljava/lang/String;)V = AdUnitId
  getAdWidth()I = AdWidth
  getAutorefreshEnabled()Z = AutorefreshEnabled
  getBroadcastIdentifier()J = BroadcastIdentifier
  getKeywords()Ljava/lang/String; = Keywords
  setKeywords(Ljava/lang/String;)V = Keywords
  getLocation()Landroid/location/Location; = Location
  setLocation(Landroid/location/Location;)V = Location
  getMoPubView()Lcom/mopub/mobileads/MoPubView; = MoPubView
  getTesting()Z = Testing
  setTesting(Z)V = Testing
  loadAd()V = LoadAd()
  reload()V = Reload()
  setShouldHonorServerDimensions(Landroid/view/View;)V = SetShouldHonorServerDimensions(Android.Views.View)
  setTimeout(I)V = SetTimeout(int)
com/mopub/mobileads/BaseHtmlWebView = com.mopub.mobileads.BaseHtmlWebView
  <init>(Landroid/content/Context;Lcom/mopub/common/AdReport;)V = .ctor(Android.Content.Context, com.mopub.common.AdReport)
  init(Z)V = Init(bool)
  onResetUserClick()V = OnResetUserClick()
  onUserClick()V = OnUserClick()
  wasClicked()Z = WasClicked()
com/mopub/mobileads/BaseInterstitialActivity = com.mopub.mobileads.BaseInterstitialActivity
  mAdReport = MAdReport
  getAdView()Landroid/view/View; = AdView
  getAdReportFromIntent(Landroid/content/Intent;)Lcom/mopub/common/AdReport; = GetAdReportFromIntent(Android.Content.Intent)
  getBroadcastIdentifierFromIntent(Landroid/content/Intent;)Ljava/lang/Long; = GetBroadcastIdentifierFromIntent(Android.Content.Intent)
  hideInterstitialCloseButton()V = HideInterstitialCloseButton()
  showInterstitialCloseButton()V = ShowInterstitialCloseButton()
com/mopub/mobileads/BaseVideoPlayerActivity = com.mopub.mobileads.BaseVideoPlayerActivity
  <init>()V = .ctor()
  VIDEO_CLASS_EXTRAS_KEY = VideoClassExtrasKey
  VIDEO_URL = VideoUrl
  startMraid(Landroid/content/Context;Ljava/lang/String;)V = StartMraid(Android.Content.Context, string)
com/mopub/mobileads/BaseVideoViewController = com.mopub.mobileads.BaseVideoViewController
  <init>(Landroid/content/Context;Ljava/lang/Long;Lcom/mopub/mobileads/BaseVideoViewController$BaseVideoViewControllerListener;)V = .ctor(Android.Content.Context, Java.Lang.Long, com.mopub.mobileads.BaseVideoViewController.IBaseVideoViewControllerListener)
  getBaseVideoViewControllerListener()Lcom/mopub/mobileads/BaseVideoViewController$BaseVideoViewControllerListener; = BaseVideoViewControllerListener
  getContext()Landroid/content/Context; = Context
  getLayout()Landroid/view/ViewGroup; = Layout
  getVideoView()Landroid/widget/VideoView; = VideoView
  backButtonEnabled()Z = BackButtonEnabled()
  onBackPressed()V = OnBackPressed()
  onConfigurationChanged(Landroid/content/res/Configuration;)V = OnConfigurationChanged(Android.Content.Res.Configuration)
  onCreate()V = OnCreate()
  onDestroy()V = OnDestroy()
  onPause()V = OnPause()
  onResume()V = OnResume()
  onSaveInstanceState(Landroid/os/Bundle;)V = OnSaveInstanceState(Android.OS.Bundle)
  videoCompleted(Z)V = VideoCompleted(bool)
  videoError(Z)V = VideoError(bool)
com/mopub/mobileads/BaseWebView = com.mopub.mobileads.BaseWebView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  mIsDestroyed = MIsDestroyed
  enablePlugins(Z)V = EnablePlugins(bool)
com/mopub/mobileads/BuildConfig = com.mopub.mobileads.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/mopub/mobileads/CustomEventBanner = com.mopub.mobileads.CustomEventBanner
  <init>()V = .ctor()
  loadBanner(Landroid/content/Context;Lcom/mopub/mobileads/CustomEventBanner$CustomEventBannerListener;Ljava/util/Map;Ljava/util/Map;)V = loadBanner(Android.Content.Context, com.mopub.mobileads.CustomEventBanner.ICustomEventBannerListener, System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, string>)
  onInvalidate()V = OnInvalidate()
com/mopub/mobileads/CustomEventBannerAdapter = com.mopub.mobileads.CustomEventBannerAdapter
  <init>(Lcom/mopub/mobileads/MoPubView;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)V = .ctor(com.mopub.mobileads.MoPubView, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  DEFAULT_BANNER_TIMEOUT_DELAY = DefaultBannerTimeoutDelay
  onBannerClicked()V = OnBannerClicked()
  onBannerCollapsed()V = OnBannerCollapsed()
  onBannerExpanded()V = OnBannerExpanded()
  onBannerFailed(Lcom/mopub/mobileads/MoPubErrorCode;)V = OnBannerFailed(com.mopub.mobileads.MoPubErrorCode)
  onBannerLoaded(Landroid/view/View;)V = OnBannerLoaded(Android.Views.View)
  onLeaveApplication()V = OnLeaveApplication()
com/mopub/mobileads/CustomEventInterstitial = com.mopub.mobileads.CustomEventInterstitial
  <init>()V = .ctor()
  loadInterstitial(Landroid/content/Context;Lcom/mopub/mobileads/CustomEventInterstitial$CustomEventInterstitialListener;Ljava/util/Map;Ljava/util/Map;)V = LoadInterstitial(Android.Content.Context, com.mopub.mobileads.CustomEventInterstitial.ICustomEventInterstitialListener, System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, string>)
  onInvalidate()V = OnInvalidate()
  showInterstitial()V = ShowInterstitial()
com/mopub/mobileads/CustomEventInterstitialAdapter = com.mopub.mobileads.CustomEventInterstitialAdapter
  <init>(Lcom/mopub/mobileads/MoPubInterstitial;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)V = .ctor(com.mopub.mobileads.MoPubInterstitial, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  DEFAULT_INTERSTITIAL_TIMEOUT_DELAY = DefaultInterstitialTimeoutDelay
  onInterstitialClicked()V = OnInterstitialClicked()
  onInterstitialDismissed()V = OnInterstitialDismissed()
  onInterstitialFailed(Lcom/mopub/mobileads/MoPubErrorCode;)V = OnInterstitialFailed(com.mopub.mobileads.MoPubErrorCode)
  onInterstitialLoaded()V = OnInterstitialLoaded()
  onInterstitialShown()V = OnInterstitialShown()
  onLeaveApplication()V = OnLeaveApplication()
com/mopub/mobileads/CustomEventRewardedVideo = com.mopub.mobileads.CustomEventRewardedVideo
  <init>()V = .ctor()
  getAdNetworkId()Ljava/lang/String; = AdNetworkId
  hasVideoAvailable()Z = HasVideoAvailable
  getLifecycleListener()Lcom/mopub/common/LifecycleListener; = LifecycleListener
  checkAndInitializeSdk(Landroid/app/Activity;Ljava/util/Map;Ljava/util/Map;)Z = CheckAndInitializeSdk(Android.App.Activity, System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, string>)
  loadWithSdkInitialized(Landroid/app/Activity;Ljava/util/Map;Ljava/util/Map;)V = LoadWithSdkInitialized(Android.App.Activity, System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, string>)
  onInvalidate()V = OnInvalidate()
  showVideo()V = ShowVideo()
com/mopub/mobileads/DefaultBannerAdListener = com.mopub.mobileads.DefaultBannerAdListener
  <init>()V = .ctor()
  onBannerClicked(Lcom/mopub/mobileads/MoPubView;)V = OnBannerClicked(com.mopub.mobileads.MoPubView)
  onBannerCollapsed(Lcom/mopub/mobileads/MoPubView;)V = OnBannerCollapsed(com.mopub.mobileads.MoPubView)
  onBannerExpanded(Lcom/mopub/mobileads/MoPubView;)V = OnBannerExpanded(com.mopub.mobileads.MoPubView)
  onBannerFailed(Lcom/mopub/mobileads/MoPubView;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnBannerFailed(com.mopub.mobileads.MoPubView, com.mopub.mobileads.MoPubErrorCode)
  onBannerLoaded(Lcom/mopub/mobileads/MoPubView;)V = OnBannerLoaded(com.mopub.mobileads.MoPubView)
com/mopub/mobileads/DefaultInterstitialAdListener = com.mopub.mobileads.DefaultInterstitialAdListener
  <init>()V = .ctor()
  onInterstitialClicked(Lcom/mopub/mobileads/MoPubInterstitial;)V = OnInterstitialClicked(com.mopub.mobileads.MoPubInterstitial)
  onInterstitialDismissed(Lcom/mopub/mobileads/MoPubInterstitial;)V = OnInterstitialDismissed(com.mopub.mobileads.MoPubInterstitial)
  onInterstitialFailed(Lcom/mopub/mobileads/MoPubInterstitial;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnInterstitialFailed(com.mopub.mobileads.MoPubInterstitial, com.mopub.mobileads.MoPubErrorCode)
  onInterstitialLoaded(Lcom/mopub/mobileads/MoPubInterstitial;)V = OnInterstitialLoaded(com.mopub.mobileads.MoPubInterstitial)
  onInterstitialShown(Lcom/mopub/mobileads/MoPubInterstitial;)V = OnInterstitialShown(com.mopub.mobileads.MoPubInterstitial)
com/mopub/mobileads/EventForwardingBroadcastReceiver = com.mopub.mobileads.EventForwardingBroadcastReceiver
  <init>(Lcom/mopub/mobileads/CustomEventInterstitial$CustomEventInterstitialListener;J)V = .ctor(com.mopub.mobileads.CustomEventInterstitial.ICustomEventInterstitialListener, long)
  ACTION_INTERSTITIAL_CLICK = ActionInterstitialClick
  ACTION_INTERSTITIAL_DISMISS = ActionInterstitialDismiss
  ACTION_INTERSTITIAL_FAIL = ActionInterstitialFail
  ACTION_INTERSTITIAL_SHOW = ActionInterstitialShow
  getHtmlInterstitialIntentFilter()Landroid/content/IntentFilter; = HtmlInterstitialIntentFilter
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
  register(Landroid/content/Context;)V = Register(Android.Content.Context)
  unregister()V = Unregister()
com/mopub/mobileads/FacebookKeywordProvider = com.mopub.mobileads.FacebookKeywordProvider
  <init>()V = .ctor()
  getKeyword(Landroid/content/Context;)Ljava/lang/String; = GetKeyword(Android.Content.Context)
com/mopub/mobileads/factories/AdViewControllerFactory = Com.Mopub.Mobileads.Factories.AdViewControllerFactory
  <init>()V = .ctor()
  instance = Instance
  create(Landroid/content/Context;Lcom/mopub/mobileads/MoPubView;)Lcom/mopub/mobileads/AdViewController; = Create(Android.Content.Context, com.mopub.mobileads.MoPubView)
  internalCreate(Landroid/content/Context;Lcom/mopub/mobileads/MoPubView;)Lcom/mopub/mobileads/AdViewController; = InternalCreate(Android.Content.Context, com.mopub.mobileads.MoPubView)
  setInstance(Lcom/mopub/mobileads/factories/AdViewControllerFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.AdViewControllerFactory)
com/mopub/mobileads/factories/CustomEventBannerAdapterFactory = Com.Mopub.Mobileads.Factories.CustomEventBannerAdapterFactory
  <init>()V = .ctor()
  instance = Instance
  create(Lcom/mopub/mobileads/MoPubView;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)Lcom/mopub/mobileads/CustomEventBannerAdapter; = Create(com.mopub.mobileads.MoPubView, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  internalCreate(Lcom/mopub/mobileads/MoPubView;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)Lcom/mopub/mobileads/CustomEventBannerAdapter; = InternalCreate(com.mopub.mobileads.MoPubView, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  setInstance(Lcom/mopub/mobileads/factories/CustomEventBannerAdapterFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.CustomEventBannerAdapterFactory)
com/mopub/mobileads/factories/CustomEventBannerFactory = Com.Mopub.Mobileads.Factories.CustomEventBannerFactory
  <init>()V = .ctor()
  create(Ljava/lang/String;)Lcom/mopub/mobileads/CustomEventBanner; = Create(string)
  internalCreate(Ljava/lang/String;)Lcom/mopub/mobileads/CustomEventBanner; = InternalCreate(string)
  setInstance(Lcom/mopub/mobileads/factories/CustomEventBannerFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.CustomEventBannerFactory)
com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory = Com.Mopub.Mobileads.Factories.CustomEventInterstitialAdapterFactory
  <init>()V = .ctor()
  instance = Instance
  create(Lcom/mopub/mobileads/MoPubInterstitial;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)Lcom/mopub/mobileads/CustomEventInterstitialAdapter; = Create(com.mopub.mobileads.MoPubInterstitial, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  internalCreate(Lcom/mopub/mobileads/MoPubInterstitial;Ljava/lang/String;Ljava/util/Map;JLcom/mopub/common/AdReport;)Lcom/mopub/mobileads/CustomEventInterstitialAdapter; = InternalCreate(com.mopub.mobileads.MoPubInterstitial, string, System.Collections.Generic.IDictionary<string, string>, long, com.mopub.common.AdReport)
  setInstance(Lcom/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.CustomEventInterstitialAdapterFactory)
com/mopub/mobileads/factories/CustomEventInterstitialFactory = Com.Mopub.Mobileads.Factories.CustomEventInterstitialFactory
  <init>()V = .ctor()
  create(Ljava/lang/String;)Lcom/mopub/mobileads/CustomEventInterstitial; = Create(string)
  internalCreate(Ljava/lang/String;)Lcom/mopub/mobileads/CustomEventInterstitial; = InternalCreate(string)
  setInstance(Lcom/mopub/mobileads/factories/CustomEventInterstitialFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.CustomEventInterstitialFactory)
com/mopub/mobileads/factories/HtmlBannerWebViewFactory = Com.Mopub.Mobileads.Factories.HtmlBannerWebViewFactory
  <init>()V = .ctor()
  instance = Instance
  create(Landroid/content/Context;Lcom/mopub/common/AdReport;Lcom/mopub/mobileads/CustomEventBanner$CustomEventBannerListener;ZLjava/lang/String;Ljava/lang/String;)Lcom/mopub/mobileads/HtmlBannerWebView; = Create(Android.Content.Context, com.mopub.common.AdReport, com.mopub.mobileads.CustomEventBanner.ICustomEventBannerListener, bool, string, string)
  internalCreate(Landroid/content/Context;Lcom/mopub/common/AdReport;Lcom/mopub/mobileads/CustomEventBanner$CustomEventBannerListener;ZLjava/lang/String;Ljava/lang/String;)Lcom/mopub/mobileads/HtmlBannerWebView; = InternalCreate(Android.Content.Context, com.mopub.common.AdReport, com.mopub.mobileads.CustomEventBanner.ICustomEventBannerListener, bool, string, string)
  setInstance(Lcom/mopub/mobileads/factories/HtmlBannerWebViewFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.HtmlBannerWebViewFactory)
com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory = Com.Mopub.Mobileads.Factories.HtmlInterstitialWebViewFactory
  <init>()V = .ctor()
  instance = Instance
  create(Landroid/content/Context;Lcom/mopub/common/AdReport;Lcom/mopub/mobileads/CustomEventInterstitial$CustomEventInterstitialListener;ZLjava/lang/String;Ljava/lang/String;)Lcom/mopub/mobileads/HtmlInterstitialWebView; = Create(Android.Content.Context, com.mopub.common.AdReport, com.mopub.mobileads.CustomEventInterstitial.ICustomEventInterstitialListener, bool, string, string)
  internalCreate(Landroid/content/Context;Lcom/mopub/common/AdReport;Lcom/mopub/mobileads/CustomEventInterstitial$CustomEventInterstitialListener;ZLjava/lang/String;Ljava/lang/String;)Lcom/mopub/mobileads/HtmlInterstitialWebView; = InternalCreate(Android.Content.Context, com.mopub.common.AdReport, com.mopub.mobileads.CustomEventInterstitial.ICustomEventInterstitialListener, bool, string, string)
  setInstance(Lcom/mopub/mobileads/factories/HtmlInterstitialWebViewFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.HtmlInterstitialWebViewFactory)
com/mopub/mobileads/factories/MoPubViewFactory = Com.Mopub.Mobileads.Factories.MoPubViewFactory
  <init>()V = .ctor()
  instance = Instance
  create(Landroid/content/Context;)Lcom/mopub/mobileads/MoPubView; = Create(Android.Content.Context)
  internalCreate(Landroid/content/Context;)Lcom/mopub/mobileads/MoPubView; = InternalCreate(Android.Content.Context)
  setInstance(Lcom/mopub/mobileads/factories/MoPubViewFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.MoPubViewFactory)
com/mopub/mobileads/factories/MraidControllerFactory = Com.Mopub.Mobileads.Factories.MraidControllerFactory
  <init>()V = .ctor()
  instance = Instance
  setInstance(Lcom/mopub/mobileads/factories/MraidControllerFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.MraidControllerFactory)
com/mopub/mobileads/factories/VastManagerFactory = Com.Mopub.Mobileads.Factories.VastManagerFactory
  <init>()V = .ctor()
  instance = Instance
  setInstance(Lcom/mopub/mobileads/factories/VastManagerFactory;)V = SetInstance(Com.Mopub.Mobileads.Factories.VastManagerFactory)
com/mopub/mobileads/HtmlBannerWebView = com.mopub.mobileads.HtmlBannerWebView
  <init>(Landroid/content/Context;Lcom/mopub/common/AdReport;)V = .ctor(Android.Content.Context, com.mopub.common.AdReport)
  EXTRA_AD_CLICK_DATA = ExtraAdClickData
  init(Lcom/mopub/mobileads/CustomEventBanner$CustomEventBannerListener;ZLjava/lang/String;Ljava/lang/String;)V = Init(com.mopub.mobileads.CustomEventBanner.ICustomEventBannerListener, bool, string, string)
com/mopub/mobileads/HtmlInterstitialWebView = com.mopub.mobileads.HtmlInterstitialWebView
  <init>(Landroid/content/Context;Lcom/mopub/common/AdReport;)V = .ctor(Android.Content.Context, com.mopub.common.AdReport)
  init(Lcom/mopub/mobileads/CustomEventInterstitial$CustomEventInterstitialListener;ZLjava/lang/String;Ljava/lang/String;)V = Init(com.mopub.mobileads.CustomEventInterstitial.ICustomEventInterstitialListener, bool, string, string)
com/mopub/mobileads/HtmlWebViewListener = com.mopub.mobileads.IHtmlWebViewListener
  onClicked()V = OnClicked()
  onCollapsed()V = OnCollapsed()
  onFailed(Lcom/mopub/mobileads/MoPubErrorCode;)V = OnFailed(com.mopub.mobileads.MoPubErrorCode)
  onLoaded(Lcom/mopub/mobileads/BaseHtmlWebView;)V = OnLoaded(com.mopub.mobileads.BaseHtmlWebView)
com/mopub/mobileads/MoPubActivity = com.mopub.mobileads.MoPubActivity
  <init>()V = .ctor()
  getAdView()Landroid/view/View; = AdView
  onCreate(Landroid/os/Bundle;)V = OnCreate(Android.OS.Bundle)
  onDestroy()V = OnDestroy()
  start(Landroid/content/Context;Ljava/lang/String;Lcom/mopub/common/AdReport;ZLjava/lang/String;Ljava/lang/String;Lcom/mopub/common/CreativeOrientation;J)V = Start(Android.Content.Context, string, com.mopub.common.AdReport, bool, string, string, com.mopub.common.CreativeOrientation, long)
com/mopub/mobileads/MoPubConversionTracker = com.mopub.mobileads.MoPubConversionTracker
  <init>()V = .ctor()
  reportAppOpen(Landroid/content/Context;)V = ReportAppOpen(Android.Content.Context)
com/mopub/mobileads/MoPubErrorCode = com.mopub.mobileads.MoPubErrorCode
  ADAPTER_CONFIGURATION_ERROR = AdapterConfigurationError
  ADAPTER_NOT_FOUND = AdapterNotFound
  CANCELLED = Cancelled
  INTERNAL_ERROR = InternalError
  MRAID_LOAD_ERROR = MraidLoadError
  NETWORK_INVALID_STATE = NetworkInvalidState
  NETWORK_NO_FILL = NetworkNoFill
  NETWORK_TIMEOUT = NetworkTimeout
  NO_CONNECTION = NoConnection
  NO_FILL = NoFill
  SERVER_ERROR = ServerError
  UNSPECIFIED = Unspecified
  VIDEO_CACHE_ERROR = VideoCacheError
  VIDEO_DOWNLOAD_ERROR = VideoDownloadError
  VIDEO_NOT_AVAILABLE = VideoNotAvailable
  VIDEO_PLAYBACK_ERROR = VideoPlaybackError
  WARMUP = Warmup
  valueOf(Ljava/lang/String;)Lcom/mopub/mobileads/MoPubErrorCode; = ValueOf(string)
  values()[Lcom/mopub/mobileads/MoPubErrorCode; = Values()
com/mopub/mobileads/MoPubInterstitial = com.mopub.mobileads.MoPubInterstitial
  <init>(Landroid/app/Activity;Ljava/lang/String;)V = .ctor(Android.App.Activity, string)
  getActivity()Landroid/app/Activity; = Activity
  getInterstitialAdListener()Lcom/mopub/mobileads/MoPubInterstitial$InterstitialAdListener; = InterstitialAdListener
  setInterstitialAdListener(Lcom/mopub/mobileads/MoPubInterstitial$InterstitialAdListener;)V = InterstitialAdListener
  isReady()Z = IsReady
  getKeywords()Ljava/lang/String; = Keywords
  setKeywords(Ljava/lang/String;)V = Keywords
  getLocalExtras()Ljava/util/Map; = LocalExtras
  setLocalExtras(Ljava/util/Map;)V = LocalExtras
  getLocation()Landroid/location/Location; = Location
  getTesting()Z = Testing
  setTesting(Z)V = Testing
  destroy()V = Destroy()
  forceRefresh()V = ForceRefresh()
  load()V = Load()
  onCustomEventInterstitialClicked()V = OnCustomEventInterstitialClicked()
  onCustomEventInterstitialDismissed()V = OnCustomEventInterstitialDismissed()
  onCustomEventInterstitialFailed(Lcom/mopub/mobileads/MoPubErrorCode;)V = OnCustomEventInterstitialFailed(com.mopub.mobileads.MoPubErrorCode)
  onCustomEventInterstitialLoaded()V = OnCustomEventInterstitialLoaded()
  onCustomEventInterstitialShown()V = OnCustomEventInterstitialShown()
  show()Z = Show()
com/mopub/mobileads/MoPubRewardedVideoListener = com.mopub.mobileads.IMoPubRewardedVideoListener
  onRewardedVideoClosed(Ljava/lang/String;)V = OnRewardedVideoClosed(string)
  onRewardedVideoCompleted(Ljava/util/Set;Lcom/mopub/common/MoPubReward;)V = OnRewardedVideoCompleted(System.Collections.Generic.ICollection<string>, com.mopub.common.MoPubReward)
  onRewardedVideoLoadFailure(Ljava/lang/String;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnRewardedVideoLoadFailure(string, com.mopub.mobileads.MoPubErrorCode)
  onRewardedVideoLoadSuccess(Ljava/lang/String;)V = OnRewardedVideoLoadSuccess(string)
  onRewardedVideoPlaybackError(Ljava/lang/String;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnRewardedVideoPlaybackError(string, com.mopub.mobileads.MoPubErrorCode)
  onRewardedVideoStarted(Ljava/lang/String;)V = OnRewardedVideoStarted(string)
com/mopub/mobileads/MoPubRewardedVideoManager = com.mopub.mobileads.MoPubRewardedVideoManager
  getGlobalMediationSettings(Ljava/lang/Class;)Lcom/mopub/common/MediationSettings; = GetGlobalMediationSettings(Java.Lang.Class)
  getInstanceMediationSettings(Ljava/lang/Class;Ljava/lang/String;)Lcom/mopub/common/MediationSettings; = GetInstanceMediationSettings(Java.Lang.Class, string)
  hasVideo(Ljava/lang/String;)Z = HasVideo(string)
  init(Landroid/app/Activity;[Lcom/mopub/common/MediationSettings;)V = Init(Android.App.Activity, params com.mopub.common.IMediationSettings[])
  loadVideo(Ljava/lang/String;[Lcom/mopub/common/MediationSettings;)V = LoadVideo(string, params com.mopub.common.IMediationSettings[])
  onRewardedVideoClicked(Ljava/lang/Class;Ljava/lang/String;)V = OnRewardedVideoClicked(Java.Lang.Class, string)
  onRewardedVideoClosed(Ljava/lang/Class;Ljava/lang/String;)V = OnRewardedVideoClosed(Java.Lang.Class, string)
  onRewardedVideoCompleted(Ljava/lang/Class;Ljava/lang/String;Lcom/mopub/common/MoPubReward;)V = OnRewardedVideoCompleted(Java.Lang.Class, string, com.mopub.common.MoPubReward)
  onRewardedVideoLoadFailure(Ljava/lang/Class;Ljava/lang/String;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnRewardedVideoLoadFailure(Java.Lang.Class, string, com.mopub.mobileads.MoPubErrorCode)
  onRewardedVideoLoadSuccess(Ljava/lang/Class;Ljava/lang/String;)V = OnRewardedVideoLoadSuccess(Java.Lang.Class, string)
  onRewardedVideoPlaybackError(Ljava/lang/Class;Ljava/lang/String;Lcom/mopub/mobileads/MoPubErrorCode;)V = OnRewardedVideoPlaybackError(Java.Lang.Class, string, com.mopub.mobileads.MoPubErrorCode)
  onRewardedVideoStarted(Ljava/lang/Class;Ljava/lang/String;)V = OnRewardedVideoStarted(Java.Lang.Class, string)
  setVideoListener(Lcom/mopub/mobileads/MoPubRewardedVideoListener;)V = SetVideoListener(com.mopub.mobileads.IMoPubRewardedVideoListener)
  showVideo(Ljava/lang/String;)V = ShowVideo(string)
  updateActivity(Landroid/app/Activity;)V = UpdateActivity(Android.App.Activity)
com/mopub/mobileads/MoPubView = com.mopub.mobileads.MoPubView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  mAdViewController = MAdViewController
  mCustomEventBannerAdapter = MCustomEventBannerAdapter
  getActivity()Landroid/app/Activity; = Activity
  getAdFormat()Lcom/mopub/common/AdFormat; = AdFormat
  getAdHeight()I = AdHeight
  getAdUnitId()Ljava/lang/String; = AdUnitId
  setAdUnitId(Ljava/lang/String;)V = AdUnitId
  getAdWidth()I = AdWidth
  getAutorefreshEnabled()Z = AutorefreshEnabled
  setAutorefreshEnabled(Z)V = AutorefreshEnabled
  getBannerAdListener()Lcom/mopub/mobileads/MoPubView$BannerAdListener; = BannerAdListener
  setBannerAdListener(Lcom/mopub/mobileads/MoPubView$BannerAdListener;)V = BannerAdListener
  getClickTrackingUrl()Ljava/lang/String; = ClickTrackingUrl
  getKeywords()Ljava/lang/String; = Keywords
  setKeywords(Ljava/lang/String;)V = Keywords
  getLocalExtras()Ljava/util/Map; = LocalExtras
  setLocalExtras(Ljava/util/Map;)V = LocalExtras
  getLocation()Landroid/location/Location; = Location
  setLocation(Landroid/location/Location;)V = Location
  getResponseString()Ljava/lang/String; = ResponseString
  getTesting()Z = Testing
  setTesting(Z)V = Testing
  adClicked()V = AdClicked()
  adClosed()V = AdClosed()
  adFailed(Lcom/mopub/mobileads/MoPubErrorCode;)V = AdFailed(com.mopub.mobileads.MoPubErrorCode)
  adLoaded()V = AdLoaded()
  adPresentedOverlay()V = AdPresentedOverlay()
  destroy()V = Destroy()
  forceRefresh()V = ForceRefresh()
  loadAd()V = LoadAd()
  loadCustomEvent(Ljava/lang/String;Ljava/util/Map;)V = LoadCustomEvent(string, System.Collections.Generic.IDictionary<string, string>)
  loadFailUrl(Lcom/mopub/mobileads/MoPubErrorCode;)V = LoadFailUrl(com.mopub.mobileads.MoPubErrorCode)
  nativeAdLoaded()V = NativeAdLoaded()
  registerClick()V = RegisterClick()
  setAdContentView(Landroid/view/View;)V = SetAdContentView(Android.Views.View)
  setTimeout(I)V = SetTimeout(int)
  trackNativeImpression()V = TrackNativeImpression()
com/mopub/mobileads/MraidVideoPlayerActivity = com.mopub.mobileads.MraidVideoPlayerActivity
  <init>()V = .ctor()
  getBroadcastIdentifierFromIntent(Landroid/content/Intent;)J = GetBroadcastIdentifierFromIntent(Android.Content.Intent)
  onFinish()V = OnFinish()
  onSetContentView(Landroid/view/View;)V = OnSetContentView(Android.Views.View)
  onSetRequestedOrientation(I)V = OnSetRequestedOrientation(int)
  onStartActivityForResult(Ljava/lang/Class;ILandroid/os/Bundle;)V = OnStartActivityForResult(Java.Lang.Class, int, Android.OS.Bundle)
com/mopub/mobileads/RepeatingHandlerRunnable = com.mopub.mobileads.RepeatingHandlerRunnable
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  mHandler = MHandler
  mUpdateIntervalMillis = MUpdateIntervalMillis
  doWork()V = DoWork()
  run()V = Run()
  startRepeating(J)V = StartRepeating(long)
  stop()V = Stop()
com/mopub/mobileads/resource/BaseWidgetDrawable = Com.Mopub.Mobileads.Resource.BaseWidgetDrawable
  <init>()V = .ctor()
  getOpacity()I = Opacity
  drawTextWithinBounds(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Rect;Ljava/lang/String;)V = DrawTextWithinBounds(Android.Graphics.Canvas, Android.Graphics.Paint, Android.Graphics.Rect, string)
  setAlpha(I)V = SetAlpha(int)
  setColorFilter(Landroid/graphics/ColorFilter;)V = SetColorFilter(Android.Graphics.ColorFilter)
com/mopub/mobileads/resource/CloseButtonDrawable = Com.Mopub.Mobileads.Resource.CloseButtonDrawable
  <init>()V = .ctor()
  <init>(F)V = .ctor(float)
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
com/mopub/mobileads/resource/CtaButtonDrawable = Com.Mopub.Mobileads.Resource.CtaButtonDrawable
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getCtaText()Ljava/lang/String; = CtaText
  setCtaText(Ljava/lang/String;)V = CtaText
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
com/mopub/mobileads/resource/DrawableConstants = Com.Mopub.Mobileads.Resource.DrawableConstants
  <init>()V = .ctor()
  TRANSPARENT_GRAY = TransparentGray
com/mopub/mobileads/resource/MraidJavascript = Com.Mopub.Mobileads.Resource.MraidJavascript
  <init>()V = .ctor()
  JAVASCRIPT_SOURCE = JavascriptSource
com/mopub/mobileads/resource/ProgressBarDrawable = Com.Mopub.Mobileads.Resource.ProgressBarDrawable
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getCurrentProgress()I = CurrentProgress
  getSkipRatio()F = SkipRatio
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
  forceCompletion()V = ForceCompletion()
  reset()V = Reset()
  setDurationAndSkipOffset(II)V = SetDurationAndSkipOffset(int, int)
  setProgress(I)V = SetProgress(int)
com/mopub/mobileads/resource/RadialCountdownDrawable = Com.Mopub.Mobileads.Resource.RadialCountdownDrawable
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  getInitialCountdownMilliseconds()I = InitialCountdownMilliseconds
  draw(Landroid/graphics/Canvas;)V = Draw(Android.Graphics.Canvas)
  setInitialCountdown(I)V = SetInitialCountdown(int)
  updateCountdownProgress(I)V = UpdateCountdownProgress(int)
com/mopub/mobileads/util/WebViews = Com.Mopub.Mobileads.Util.WebViews
  <init>()V = .ctor()
  onPause(Landroid/webkit/WebView;Z)V = OnPause(Android.Webkit.WebView, bool)
  onResume(Landroid/webkit/WebView;)V = OnResume(Android.Webkit.WebView)
  setDisableJSChromeClient(Landroid/webkit/WebView;)V = SetDisableJSChromeClient(Android.Webkit.WebView)
com/mopub/mobileads/util/XmlUtils = Com.Mopub.Mobileads.Util.XmlUtils
  getAttributeValue(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/lang/String; = GetAttributeValue(Org.W3c.Dom.INode, string)
  getAttributeValueAsInt(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/lang/Integer; = GetAttributeValueAsInt(Org.W3c.Dom.INode, string)
  getFirstMatchFromDocument(Lorg/w3c/dom/Document;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mopub/mobileads/util/XmlUtils$NodeProcessor;)Ljava/lang/Object; = GetFirstMatchFromDocument(Org.W3c.Dom.IDocument, string, string, string, Com.Mopub.Mobileads.Util.XmlUtils.INodeProcessor)
  getFirstMatchingChildNode(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node; = GetFirstMatchingChildNode(Org.W3c.Dom.INode, string)
  getFirstMatchingChildNode(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/w3c/dom/Node; = GetFirstMatchingChildNode(Org.W3c.Dom.INode, string, string, System.Collections.Generic.IList<string>)
  getFirstMatchingStringData(Lorg/w3c/dom/Document;Ljava/lang/String;)Ljava/lang/String; = GetFirstMatchingStringData(Org.W3c.Dom.IDocument, string)
  getFirstMatchingStringData(Lorg/w3c/dom/Document;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetFirstMatchingStringData(Org.W3c.Dom.IDocument, string, string, string)
  getListFromDocument(Lorg/w3c/dom/Document;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mopub/mobileads/util/XmlUtils$NodeProcessor;)Ljava/util/List; = GetListFromDocument(Org.W3c.Dom.IDocument, string, string, string, Com.Mopub.Mobileads.Util.XmlUtils.INodeProcessor)
  getMatchingChildNodes(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/util/List; = GetMatchingChildNodes(Org.W3c.Dom.INode, string)
  getMatchingChildNodes(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetMatchingChildNodes(Org.W3c.Dom.INode, string, string, System.Collections.Generic.IList<string>)
  getNodesWithElementAndAttribute(Lorg/w3c/dom/Document;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; = GetNodesWithElementAndAttribute(Org.W3c.Dom.IDocument, string, string, string)
  getNodeValue(Lorg/w3c/dom/Node;)Ljava/lang/String; = GetNodeValue(Org.W3c.Dom.INode)
  getStringDataAsList(Lorg/w3c/dom/Document;Ljava/lang/String;)Ljava/util/List; = GetStringDataAsList(Org.W3c.Dom.IDocument, string)
  getStringDataAsList(Lorg/w3c/dom/Document;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; = GetStringDataAsList(Org.W3c.Dom.IDocument, string, string, string)
  nodeMatchesAttributeFilter(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/util/List;)Z = NodeMatchesAttributeFilter(Org.W3c.Dom.INode, string, System.Collections.Generic.IList<string>)
com/mopub/mobileads/VideoViewabilityTrackerXmlManager = com.mopub.mobileads.VideoViewabilityTrackerXmlManager
  PERCENT_VIEWABLE = PercentViewable
  VIEWABLE_PLAYTIME = ViewablePlaytime
com/mopub/mobileads/ViewGestureDetector = com.mopub.mobileads.ViewGestureDetector
  <init>(Landroid/content/Context;Landroid/view/View;Lcom/mopub/common/AdReport;)V = .ctor(Android.Content.Context, Android.Views.View, com.mopub.common.AdReport)
  sendTouchEvent(Landroid/view/MotionEvent;)V = SendTouchEvent(Android.Views.MotionEvent)
  setUserClickListener(Lcom/mopub/mobileads/ViewGestureDetector$UserClickListener;)V = SetUserClickListener(com.mopub.mobileads.ViewGestureDetector.IUserClickListener)
com/mopub/mobileads/WebViewAdUrlGenerator = com.mopub.mobileads.WebViewAdUrlGenerator
  <init>(Landroid/content/Context;Z)V = .ctor(Android.Content.Context, bool)
  generateUrlString(Ljava/lang/String;)Ljava/lang/String; = GenerateUrlString(string)
com/mopub/nativeads/AdapterHelper = Com.Mopub.Nativeads.AdapterHelper
  <init>(Landroid/content/Context;II)V = .ctor(Android.Content.Context, int, int)
  getAdView(Landroid/view/View;Landroid/view/ViewGroup;Lcom/mopub/nativeads/NativeAd;Lcom/mopub/nativeads/ViewBinder;)Landroid/view/View; = GetAdView(Android.Views.View, Android.Views.ViewGroup, Com.Mopub.Nativeads.NativeAd, Com.Mopub.Nativeads.ViewBinder)
  isAdPosition(I)Z = IsAdPosition(int)
  shiftedCount(I)I = ShiftedCount(int)
  shiftedPosition(I)I = ShiftedPosition(int)
com/mopub/nativeads/AdRendererRegistry = Com.Mopub.Nativeads.AdRendererRegistry
  <init>()V = .ctor()
  getAdRendererCount()I = AdRendererCount
  getRendererIterable()Ljava/lang/Iterable; = RendererIterable
  getRendererForAd(Lcom/mopub/nativeads/BaseNativeAd;)Lcom/mopub/nativeads/MoPubAdRenderer; = GetRendererForAd(Com.Mopub.Nativeads.BaseNativeAd)
  getRendererForViewType(I)Lcom/mopub/nativeads/MoPubAdRenderer; = GetRendererForViewType(int)
  getViewTypeForAd(Lcom/mopub/nativeads/NativeAd;)I = GetViewTypeForAd(Com.Mopub.Nativeads.NativeAd)
  registerAdRenderer(Lcom/mopub/nativeads/MoPubAdRenderer;)V = RegisterAdRenderer(Com.Mopub.Nativeads.IMoPubAdRenderer)
com/mopub/nativeads/BaseNativeAd = Com.Mopub.Nativeads.BaseNativeAd
  <init>()V = .ctor()
  addClickTracker(Ljava/lang/String;)V = AddClickTracker(string)
  addClickTrackers(Ljava/lang/Object;)V = AddClickTrackers(Java.Lang.Object)
  addImpressionTracker(Ljava/lang/String;)V = AddImpressionTracker(string)
  addImpressionTrackers(Ljava/lang/Object;)V = AddImpressionTrackers(Java.Lang.Object)
  clear(Landroid/view/View;)V = Clear(Android.Views.View)
  destroy()V = Destroy()
  notifyAdClicked()V = NotifyAdClicked()
  notifyAdImpressed()V = NotifyAdImpressed()
  prepare(Landroid/view/View;)V = Prepare(Android.Views.View)
  setNativeEventListener(Lcom/mopub/nativeads/BaseNativeAd$NativeEventListener;)V = SetNativeEventListener(Com.Mopub.Nativeads.BaseNativeAd.INativeEventListener)
com/mopub/nativeads/ClickInterface = Com.Mopub.Nativeads.IClickInterface
  handleClick(Landroid/view/View;)V = HandleClick(Android.Views.View)
com/mopub/nativeads/CustomEventNative = Com.Mopub.Nativeads.CustomEventNative
  <init>()V = .ctor()
  loadNativeAd(Landroid/app/Activity;Lcom/mopub/nativeads/CustomEventNative$CustomEventNativeListener;Ljava/util/Map;Ljava/util/Map;)V = loadNativeAd(Android.App.Activity, Com.Mopub.Nativeads.CustomEventNative.ICustomEventNativeListener, System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, string>)
com/mopub/nativeads/factories/CustomEventNativeFactory = Com.Mopub.Nativeads.Factories.CustomEventNativeFactory
  <init>()V = .ctor()
  instance = Instance
  create(Ljava/lang/String;)Lcom/mopub/nativeads/CustomEventNative; = Create(string)
  internalCreate(Ljava/lang/Class;)Lcom/mopub/nativeads/CustomEventNative; = InternalCreate(Java.Lang.Class)
  setInstance(Lcom/mopub/nativeads/factories/CustomEventNativeFactory;)V = SetInstance(Com.Mopub.Nativeads.Factories.CustomEventNativeFactory)
com/mopub/nativeads/ImpressionInterface = Com.Mopub.Nativeads.IImpressionInterface
  getImpressionMinPercentageViewed()I = ImpressionMinPercentageViewed
  getImpressionMinTimeViewed()I = ImpressionMinTimeViewed
  isImpressionRecorded()Z = IsImpressionRecorded
  recordImpression(Landroid/view/View;)V = RecordImpression(Android.Views.View)
  setImpressionRecorded()V = SetImpressionRecorded()
com/mopub/nativeads/ImpressionTracker = Com.Mopub.Nativeads.ImpressionTracker
  <init>(Landroid/app/Activity;)V = .ctor(Android.App.Activity)
  addView(Landroid/view/View;Lcom/mopub/nativeads/ImpressionInterface;)V = AddView(Android.Views.View, Com.Mopub.Nativeads.IImpressionInterface)
  clear()V = Clear()
  destroy()V = Destroy()
  removeView(Landroid/view/View;)V = RemoveView(Android.Views.View)
com/mopub/nativeads/MediaLayout = Com.Mopub.Nativeads.MediaLayout
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  getMainImageView()Landroid/widget/ImageView; = MainImageView
  getTextureView()Landroid/view/TextureView; = TextureView
  initForVideo()V = InitForVideo()
  reset()V = Reset()
  resetProgress()V = ResetProgress()
  setMainImageDrawable(Landroid/graphics/drawable/Drawable;)V = SetMainImageDrawable(Android.Graphics.Drawables.Drawable)
  setMode(Lcom/mopub/nativeads/MediaLayout$Mode;)V = SetMode(Com.Mopub.Nativeads.MediaLayout.Mode)
  setMuteControlClickListener(Landroid/view/View$OnClickListener;)V = SetMuteControlClickListener(Android.Views.View.IOnClickListener)
  setMuteState(Lcom/mopub/nativeads/MediaLayout$MuteState;)V = SetMuteState(Com.Mopub.Nativeads.MediaLayout.MuteState)
  setPlayButtonClickListener(Landroid/view/View$OnClickListener;)V = SetPlayButtonClickListener(Android.Views.View.IOnClickListener)
  setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V = SetSurfaceTextureListener(Android.Views.TextureView.ISurfaceTextureListener)
  setVideoClickListener(Landroid/view/View$OnClickListener;)V = SetVideoClickListener(Android.Views.View.IOnClickListener)
  updateProgress(I)V = UpdateProgress(int)
com/mopub/nativeads/MediaViewBinder = Com.Mopub.Nativeads.MediaViewBinder
com/mopub/nativeads/MoPubAdAdapter = Com.Mopub.Nativeads.MoPubAdAdapter
  <init>(Landroid/app/Activity;Landroid/widget/Adapter;)V = .ctor(Android.App.Activity, Android.Widget.IAdapter)
  <init>(Landroid/app/Activity;Landroid/widget/Adapter;Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubClientPositioning;)V = .ctor(Android.App.Activity, Android.Widget.IAdapter, Com.Mopub.Nativeads.MoPubNativeAdPositioning.MoPubClientPositioning)
  <init>(Landroid/app/Activity;Landroid/widget/Adapter;Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubServerPositioning;)V = .ctor(Android.App.Activity, Android.Widget.IAdapter, Com.Mopub.Nativeads.MoPubNativeAdPositioning.MoPubServerPositioning)
  getCount()I = Count
  clearAds()V = ClearAds()
  destroy()V = Destroy()
  getAdjustedPosition(I)I = GetAdjustedPosition(int)
  getItem(I)Ljava/lang/Object; = GetItem(int)
  getItemId(I)J = GetItemId(int)
  getOriginalPosition(I)I = GetOriginalPosition(int)
  getView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View; = GetView(int, Android.Views.View, Android.Views.ViewGroup)
  insertItem(I)V = InsertItem(int)
  isAd(I)Z = IsAd(int)
  loadAds(Ljava/lang/String;)V = LoadAds(string)
  loadAds(Ljava/lang/String;Lcom/mopub/nativeads/RequestParameters;)V = LoadAds(string, Com.Mopub.Nativeads.RequestParameters)
  refreshAds(Landroid/widget/ListView;Ljava/lang/String;)V = RefreshAds(Android.Widget.ListView, string)
  refreshAds(Landroid/widget/ListView;Ljava/lang/String;Lcom/mopub/nativeads/RequestParameters;)V = RefreshAds(Android.Widget.ListView, string, Com.Mopub.Nativeads.RequestParameters)
  registerAdRenderer(Lcom/mopub/nativeads/MoPubAdRenderer;)V = RegisterAdRenderer(Com.Mopub.Nativeads.IMoPubAdRenderer)
  removeItem(I)V = RemoveItem(int)
  setAdLoadedListener(Lcom/mopub/nativeads/MoPubNativeAdLoadedListener;)V = SetAdLoadedListener(Com.Mopub.Nativeads.IMoPubNativeAdLoadedListener)
  setOnClickListener(Landroid/widget/ListView;Landroid/widget/AdapterView$OnItemClickListener;)V = SetOnClickListener(Android.Widget.ListView, Android.Widget.AdapterView.IOnItemClickListener)
  setOnItemLongClickListener(Landroid/widget/ListView;Landroid/widget/AdapterView$OnItemLongClickListener;)V = SetOnItemLongClickListener(Android.Widget.ListView, Android.Widget.AdapterView.IOnItemLongClickListener)
  setOnItemSelectedListener(Landroid/widget/ListView;Landroid/widget/AdapterView$OnItemSelectedListener;)V = SetOnItemSelectedListener(Android.Widget.ListView, Android.Widget.AdapterView.IOnItemSelectedListener)
  setSelection(Landroid/widget/ListView;I)V = SetSelection(Android.Widget.ListView, int)
  smoothScrollToPosition(Landroid/widget/ListView;I)V = SmoothScrollToPosition(Android.Widget.ListView, int)
com/mopub/nativeads/MoPubAdRenderer = Com.Mopub.Nativeads.IMoPubAdRenderer
  createAdView(Landroid/app/Activity;Landroid/view/ViewGroup;)Landroid/view/View; = CreateAdView(Android.App.Activity, Android.Views.ViewGroup)
  renderAdView(Landroid/view/View;Lcom/mopub/nativeads/BaseNativeAd;)V = RenderAdView(Android.Views.View, Java.Lang.Object)
  supports(Lcom/mopub/nativeads/BaseNativeAd;)Z = Supports(Com.Mopub.Nativeads.BaseNativeAd)
com/mopub/nativeads/MoPubNative = Com.Mopub.Nativeads.MoPubNative
  <init>(Landroid/app/Activity;Ljava/lang/String;Lcom/mopub/nativeads/AdRendererRegistry;Lcom/mopub/nativeads/MoPubNative$MoPubNativeNetworkListener;)V = .ctor(Android.App.Activity, string, Com.Mopub.Nativeads.AdRendererRegistry, Com.Mopub.Nativeads.MoPubNative.IMoPubNativeNetworkListener)
  <init>(Landroid/app/Activity;Ljava/lang/String;Lcom/mopub/nativeads/MoPubNative$MoPubNativeNetworkListener;)V = .ctor(Android.App.Activity, string, Com.Mopub.Nativeads.MoPubNative.IMoPubNativeNetworkListener)
  destroy()V = Destroy()
  makeRequest()V = MakeRequest()
  makeRequest(Lcom/mopub/nativeads/RequestParameters;)V = MakeRequest(Com.Mopub.Nativeads.RequestParameters)
  makeRequest(Lcom/mopub/nativeads/RequestParameters;Ljava/lang/Integer;)V = MakeRequest(Com.Mopub.Nativeads.RequestParameters, Java.Lang.Integer)
  registerAdRenderer(Lcom/mopub/nativeads/MoPubAdRenderer;)V = RegisterAdRenderer(Com.Mopub.Nativeads.IMoPubAdRenderer)
  setLocalExtras(Ljava/util/Map;)V = SetLocalExtras(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/mopub/nativeads/MoPubNativeAdLoadedListener = Com.Mopub.Nativeads.IMoPubNativeAdLoadedListener
  onAdLoaded(I)V = OnAdLoaded(int)
  onAdRemoved(I)V = OnAdRemoved(int)
com/mopub/nativeads/MoPubNativeAdPositioning = Com.Mopub.Nativeads.MoPubNativeAdPositioning
  <init>()V = .ctor()
  clientPositioning()Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubClientPositioning; = ClientPositioning()
  serverPositioning()Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubServerPositioning; = ServerPositioning()
com/mopub/nativeads/MoPubStaticNativeAdRenderer = Com.Mopub.Nativeads.MoPubStaticNativeAdRenderer
  <init>(Lcom/mopub/nativeads/ViewBinder;)V = .ctor(Com.Mopub.Nativeads.ViewBinder)
  createAdView(Landroid/app/Activity;Landroid/view/ViewGroup;)Landroid/view/View; = CreateAdView(Android.App.Activity, Android.Views.ViewGroup)
  renderAdView(Landroid/view/View;Lcom/mopub/nativeads/StaticNativeAd;)V = RenderAdView(Android.Views.View, Com.Mopub.Nativeads.StaticNativeAd)
  supports(Lcom/mopub/nativeads/BaseNativeAd;)Z = Supports(Com.Mopub.Nativeads.BaseNativeAd)
com/mopub/nativeads/MoPubStreamAdPlacer = Com.Mopub.Nativeads.MoPubStreamAdPlacer
  <init>(Landroid/app/Activity;)V = .ctor(Android.App.Activity)
  <init>(Landroid/app/Activity;Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubClientPositioning;)V = .ctor(Android.App.Activity, Com.Mopub.Nativeads.MoPubNativeAdPositioning.MoPubClientPositioning)
  <init>(Landroid/app/Activity;Lcom/mopub/nativeads/MoPubNativeAdPositioning$MoPubServerPositioning;)V = .ctor(Android.App.Activity, Com.Mopub.Nativeads.MoPubNativeAdPositioning.MoPubServerPositioning)
  CONTENT_VIEW_TYPE = ContentViewType
  getAdViewTypeCount()I = AdViewTypeCount
  bindAdView(Lcom/mopub/nativeads/NativeAd;Landroid/view/View;)V = BindAdView(Com.Mopub.Nativeads.NativeAd, Android.Views.View)
  clearAds()V = ClearAds()
  destroy()V = Destroy()
  getAdData(I)Ljava/lang/Object; = GetAdData(int)
  getAdjustedCount(I)I = GetAdjustedCount(int)
  getAdjustedPosition(I)I = GetAdjustedPosition(int)
  getAdRendererForViewType(I)Lcom/mopub/nativeads/MoPubAdRenderer; = GetAdRendererForViewType(int)
  getAdView(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View; = GetAdView(int, Android.Views.View, Android.Views.ViewGroup)
  getAdViewType(I)I = GetAdViewType(int)
  getOriginalCount(I)I = GetOriginalCount(int)
  getOriginalPosition(I)I = GetOriginalPosition(int)
  insertItem(I)V = InsertItem(int)
  isAd(I)Z = IsAd(int)
  loadAds(Ljava/lang/String;)V = LoadAds(string)
  loadAds(Ljava/lang/String;Lcom/mopub/nativeads/RequestParameters;)V = LoadAds(string, Com.Mopub.Nativeads.RequestParameters)
  moveItem(II)V = MoveItem(int, int)
  placeAdsInRange(II)V = PlaceAdsInRange(int, int)
  registerAdRenderer(Lcom/mopub/nativeads/MoPubAdRenderer;)V = RegisterAdRenderer(Com.Mopub.Nativeads.IMoPubAdRenderer)
  removeAdsInRange(II)I = RemoveAdsInRange(int, int)
  removeItem(I)V = RemoveItem(int)
  setAdLoadedListener(Lcom/mopub/nativeads/MoPubNativeAdLoadedListener;)V = SetAdLoadedListener(Com.Mopub.Nativeads.IMoPubNativeAdLoadedListener)
  setItemCount(I)V = SetItemCount(int)
com/mopub/nativeads/MoPubVideoNativeAdRenderer = Com.Mopub.Nativeads.MoPubVideoNativeAdRenderer
  <init>(Lcom/mopub/nativeads/MediaViewBinder;)V = .ctor(Com.Mopub.Nativeads.MediaViewBinder)
  createAdView(Landroid/app/Activity;Landroid/view/ViewGroup;)Landroid/view/View; = CreateAdView(Android.App.Activity, Android.Views.ViewGroup)
  supports(Lcom/mopub/nativeads/BaseNativeAd;)Z = Supports(Com.Mopub.Nativeads.BaseNativeAd)
com/mopub/nativeads/NativeAd = Com.Mopub.Nativeads.NativeAd
  <init>(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mopub/nativeads/BaseNativeAd;Lcom/mopub/nativeads/MoPubAdRenderer;)V = .ctor(Android.Content.Context, string, string, string, Com.Mopub.Nativeads.BaseNativeAd, Com.Mopub.Nativeads.IMoPubAdRenderer)
  getAdUnitId()Ljava/lang/String; = AdUnitId
  getBaseNativeAd()Lcom/mopub/nativeads/BaseNativeAd; = BaseNativeAd
  isDestroyed()Z = IsDestroyed
  getMoPubAdRenderer()Lcom/mopub/nativeads/MoPubAdRenderer; = MoPubAdRenderer
  clear(Landroid/view/View;)V = Clear(Android.Views.View)
  createAdView(Landroid/app/Activity;Landroid/view/ViewGroup;)Landroid/view/View; = CreateAdView(Android.App.Activity, Android.Views.ViewGroup)
  destroy()V = Destroy()
  prepare(Landroid/view/View;)V = Prepare(Android.Views.View)
  renderAdView(Landroid/view/View;)V = RenderAdView(Android.Views.View)
  setMoPubNativeEventListener(Lcom/mopub/nativeads/NativeAd$MoPubNativeEventListener;)V = SetMoPubNativeEventListener(Com.Mopub.Nativeads.NativeAd.IMoPubNativeEventListener)
com/mopub/nativeads/NativeClickHandler = Com.Mopub.Nativeads.NativeClickHandler
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  clearOnClickListener(Landroid/view/View;)V = ClearOnClickListener(Android.Views.View)
  openClickDestinationUrl(Ljava/lang/String;Landroid/view/View;)V = OpenClickDestinationUrl(string, Android.Views.View)
  setOnClickListener(Landroid/view/View;Lcom/mopub/nativeads/ClickInterface;)V = SetOnClickListener(Android.Views.View, Com.Mopub.Nativeads.IClickInterface)
com/mopub/nativeads/NativeErrorCode = Com.Mopub.Nativeads.NativeErrorCode
  CONNECTION_ERROR = ConnectionError
  EMPTY_AD_RESPONSE = EmptyAdResponse
  IMAGE_DOWNLOAD_FAILURE = ImageDownloadFailure
  INVALID_REQUEST_URL = InvalidRequestUrl
  INVALID_RESPONSE = InvalidResponse
  NATIVE_ADAPTER_CONFIGURATION_ERROR = NativeAdapterConfigurationError
  NATIVE_ADAPTER_NOT_FOUND = NativeAdapterNotFound
  NATIVE_RENDERER_CONFIGURATION_ERROR = NativeRendererConfigurationError
  NETWORK_INVALID_REQUEST = NetworkInvalidRequest
  NETWORK_INVALID_STATE = NetworkInvalidState
  NETWORK_NO_FILL = NetworkNoFill
  NETWORK_TIMEOUT = NetworkTimeout
  SERVER_ERROR_RESPONSE_CODE = ServerErrorResponseCode
  UNEXPECTED_RESPONSE_CODE = UnexpectedResponseCode
  UNSPECIFIED = Unspecified
  toString()Ljava/lang/String; = ToString()
  valueOf(Ljava/lang/String;)Lcom/mopub/nativeads/NativeErrorCode; = ValueOf(string)
  values()[Lcom/mopub/nativeads/NativeErrorCode; = Values()
com/mopub/nativeads/NativeFullScreenVideoView = Com.Mopub.Nativeads.NativeFullScreenVideoView
  <init>(Landroid/content/Context;ILjava/lang/String;)V = .ctor(Android.Content.Context, int, string)
  getTextureView()Landroid/view/TextureView; = TextureView
  resetProgress()V = ResetProgress()
  setCachedVideoFrame(Landroid/graphics/Bitmap;)V = SetCachedVideoFrame(Android.Graphics.Bitmap)
  setCloseControlListener(Landroid/view/View$OnClickListener;)V = SetCloseControlListener(Android.Views.View.IOnClickListener)
  setCtaClickListener(Landroid/view/View$OnClickListener;)V = SetCtaClickListener(Android.Views.View.IOnClickListener)
  setMode(Lcom/mopub/nativeads/NativeFullScreenVideoView$Mode;)V = SetMode(Com.Mopub.Nativeads.NativeFullScreenVideoView.Mode)
  setOrientation(I)V = SetOrientation(int)
  setPlayControlClickListener(Landroid/view/View$OnClickListener;)V = SetPlayControlClickListener(Android.Views.View.IOnClickListener)
  setPrivacyInformationClickListener(Landroid/view/View$OnClickListener;)V = SetPrivacyInformationClickListener(Android.Views.View.IOnClickListener)
  setSurfaceTextureListener(Landroid/view/TextureView$SurfaceTextureListener;)V = SetSurfaceTextureListener(Android.Views.TextureView.ISurfaceTextureListener)
  updateProgress(I)V = UpdateProgress(int)
com/mopub/nativeads/NativeImageHelper = Com.Mopub.Nativeads.NativeImageHelper
  <init>()V = .ctor()
  loadImageView(Ljava/lang/String;Landroid/widget/ImageView;)V = LoadImageView(string, Android.Widget.ImageView)
  preCacheImages(Landroid/content/Context;Ljava/util/List;Lcom/mopub/nativeads/NativeImageHelper$ImageListener;)V = PreCacheImages(Android.Content.Context, System.Collections.Generic.IList<string>, Com.Mopub.Nativeads.NativeImageHelper.IImageListener)
com/mopub/nativeads/NativeRendererHelper = Com.Mopub.Nativeads.NativeRendererHelper
  <init>()V = .ctor()
  addCtaButton(Landroid/widget/TextView;Landroid/view/View;Ljava/lang/String;)V = AddCtaButton(Android.Widget.TextView, Android.Views.View, string)
  addPrivacyInformationIcon(Landroid/widget/ImageView;Ljava/lang/String;Ljava/lang/String;)V = AddPrivacyInformationIcon(Android.Widget.ImageView, string, string)
  addTextView(Landroid/widget/TextView;Ljava/lang/String;)V = AddTextView(Android.Widget.TextView, string)
  updateExtras(Landroid/view/View;Ljava/util/Map;Ljava/util/Map;)V = UpdateExtras(Android.Views.View, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/mopub/nativeads/RequestParameters = Com.Mopub.Nativeads.RequestParameters
  getDesiredAssets()Ljava/lang/String; = DesiredAssets
  getKeywords()Ljava/lang/String; = Keywords
  getLocation()Landroid/location/Location; = Location
com/mopub/nativeads/StaticNativeAd = Com.Mopub.Nativeads.StaticNativeAd
  <init>()V = .ctor()
  getCallToAction()Ljava/lang/String; = CallToAction
  setCallToAction(Ljava/lang/String;)V = CallToAction
  getClickDestinationUrl()Ljava/lang/String; = ClickDestinationUrl
  setClickDestinationUrl(Ljava/lang/String;)V = ClickDestinationUrl
  getExtras()Ljava/util/Map; = Extras
  getIconImageUrl()Ljava/lang/String; = IconImageUrl
  setIconImageUrl(Ljava/lang/String;)V = IconImageUrl
  getImpressionMinPercentageViewed()I = ImpressionMinPercentageViewed
  getImpressionMinTimeViewed()I = ImpressionMinTimeViewed
  setImpressionMinTimeViewed(I)V = ImpressionMinTimeViewed
  isImpressionRecorded()Z = IsImpressionRecorded
  getMainImageUrl()Ljava/lang/String; = MainImageUrl
  setMainImageUrl(Ljava/lang/String;)V = MainImageUrl
  getPrivacyInformationIconClickThroughUrl()Ljava/lang/String; = PrivacyInformationIconClickThroughUrl
  setPrivacyInformationIconClickThroughUrl(Ljava/lang/String;)V = PrivacyInformationIconClickThroughUrl
  getPrivacyInformationIconImageUrl()Ljava/lang/String; = PrivacyInformationIconImageUrl
  setPrivacyInformationIconImageUrl(Ljava/lang/String;)V = PrivacyInformationIconImageUrl
  getStarRating()Ljava/lang/Double; = StarRating
  setStarRating(Ljava/lang/Double;)V = StarRating
  getText()Ljava/lang/String; = Text
  setText(Ljava/lang/String;)V = Text
  getTitle()Ljava/lang/String; = Title
  setTitle(Ljava/lang/String;)V = Title
  addExtra(Ljava/lang/String;Ljava/lang/Object;)V = AddExtra(string, Java.Lang.Object)
  clear(Landroid/view/View;)V = Clear(Android.Views.View)
  destroy()V = Destroy()
  getExtra(Ljava/lang/String;)Ljava/lang/Object; = GetExtra(string)
  handleClick(Landroid/view/View;)V = HandleClick(Android.Views.View)
  prepare(Landroid/view/View;)V = Prepare(Android.Views.View)
  recordImpression(Landroid/view/View;)V = RecordImpression(Android.Views.View)
  setImpressionRecorded()V = SetImpressionRecorded()
com/mopub/nativeads/ViewBinder = Com.Mopub.Nativeads.ViewBinder
com/mopub/volley/AuthFailureError = MoPub.Volley.AuthFailureError
  <init>()V = .ctor()
  <init>(Landroid/content/Intent;)V = .ctor(Android.Content.Intent)
  <init>(Lcom/mopub/volley/NetworkResponse;)V = .ctor(MoPub.Volley.NetworkResponse)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Exception;)V = .ctor(string, Java.Lang.Exception)
  getResolutionIntent()Landroid/content/Intent; = ResolutionIntent
com/mopub/volley/BuildConfig = MoPub.Volley.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/mopub/volley/Cache = MoPub.Volley.ICache
  clear()V = Clear()
  get(Ljava/lang/String;)Lcom/mopub/volley/Cache$Entry; = Get(string)
  initialize()V = Initialize()
  invalidate(Ljava/lang/String;Z)V = Invalidate(string, bool)
  put(Ljava/lang/String;Lcom/mopub/volley/Cache$Entry;)V = Put(string, MoPub.Volley.CacheEntry)
  remove(Ljava/lang/String;)V = Remove(string)
com/mopub/volley/CacheDispatcher = MoPub.Volley.CacheDispatcher
  <init>(Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/BlockingQueue;Lcom/mopub/volley/Cache;Lcom/mopub/volley/ResponseDelivery;)V = .ctor(Java.Util.Concurrent.IBlockingQueue, Java.Util.Concurrent.IBlockingQueue, MoPub.Volley.ICache, MoPub.Volley.IResponseDelivery)
  quit()V = Quit()
com/mopub/volley/DefaultRetryPolicy = MoPub.Volley.DefaultRetryPolicy
  <init>()V = .ctor()
  <init>(IIF)V = .ctor(int, int, float)
  DEFAULT_BACKOFF_MULT = DefaultBackoffMult
  DEFAULT_MAX_RETRIES = DefaultMaxRetries
  DEFAULT_TIMEOUT_MS = DefaultTimeoutMs
  getBackoffMultiplier()F = BackoffMultiplier
  getCurrentRetryCount()I = CurrentRetryCount
  getCurrentTimeout()I = CurrentTimeout
  hasAttemptRemaining()Z = HasAttemptRemaining
  retry(Lcom/mopub/volley/VolleyError;)V = Retry(MoPub.Volley.VolleyError)
com/mopub/volley/ExecutorDelivery = MoPub.Volley.ExecutorDelivery
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  <init>(Ljava/util/concurrent/Executor;)V = .ctor(Java.Util.Concurrent.IExecutor)
  postError(Lcom/mopub/volley/Request;Lcom/mopub/volley/VolleyError;)V = PostError(MoPub.Volley.Request, MoPub.Volley.VolleyError)
  postResponse(Lcom/mopub/volley/Request;Lcom/mopub/volley/Response;)V = PostResponse(MoPub.Volley.Request, MoPub.Volley.Response)
  postResponse(Lcom/mopub/volley/Request;Lcom/mopub/volley/Response;Ljava/lang/Runnable;)V = PostResponse(MoPub.Volley.Request, MoPub.Volley.Response, Java.Lang.IRunnable)
com/mopub/volley/Network = MoPub.Volley.INetwork
  performRequest(Lcom/mopub/volley/Request;)Lcom/mopub/volley/NetworkResponse; = PerformRequest(MoPub.Volley.Request)
com/mopub/volley/NetworkDispatcher = MoPub.Volley.NetworkDispatcher
  <init>(Ljava/util/concurrent/BlockingQueue;Lcom/mopub/volley/Network;Lcom/mopub/volley/Cache;Lcom/mopub/volley/ResponseDelivery;)V = .ctor(Java.Util.Concurrent.IBlockingQueue, MoPub.Volley.INetwork, MoPub.Volley.ICache, MoPub.Volley.IResponseDelivery)
  quit()V = Quit()
com/mopub/volley/NetworkError = MoPub.Volley.NetworkError
  <init>()V = .ctor()
  <init>(Lcom/mopub/volley/NetworkResponse;)V = .ctor(MoPub.Volley.NetworkResponse)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/mopub/volley/NetworkResponse = MoPub.Volley.NetworkResponse
  <init>([B)V = .ctor(byte[])
  <init>([BLjava/util/Map;)V = .ctor(byte[], System.Collections.Generic.IDictionary<string, string>)
  <init>(I[BLjava/util/Map;Z)V = .ctor(int, byte[], System.Collections.Generic.IDictionary<string, string>, bool)
  <init>(I[BLjava/util/Map;ZJ)V = .ctor(int, byte[], System.Collections.Generic.IDictionary<string, string>, bool, long)
  data = Data
  headers = Headers
  networkTimeMs = NetworkTimeMs
  notModified = NotModified
  statusCode = StatusCode
com/mopub/volley/NoConnectionError = MoPub.Volley.NoConnectionError
  <init>()V = .ctor()
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/mopub/volley/ParseError = MoPub.Volley.ParseError
  <init>()V = .ctor()
  <init>(Lcom/mopub/volley/NetworkResponse;)V = .ctor(MoPub.Volley.NetworkResponse)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/mopub/volley/Request = MoPub.Volley.Request
  <init>(ILjava/lang/String;Lcom/mopub/volley/Response$ErrorListener;)V = .ctor(int, string, MoPub.Volley.Response.IErrorListener)
  <init>(Ljava/lang/String;Lcom/mopub/volley/Response$ErrorListener;)V = .ctor(string, MoPub.Volley.Response.IErrorListener)
  getBodyContentType()Ljava/lang/String; = BodyContentType
  getCacheEntry()Lcom/mopub/volley/Cache$Entry; = CacheEntry
  getCacheKey()Ljava/lang/String; = CacheKey
  getErrorListener()Lcom/mopub/volley/Response$ErrorListener; = ErrorListener
  hasHadResponseDelivered()Z = HasHadResponseDelivered
  getHeaders()Ljava/util/Map; = Headers
  isCanceled()Z = IsCanceled
  getParams()Ljava/util/Map; = Params
  getParamsEncoding()Ljava/lang/String; = ParamsEncoding
  getPostBodyContentType()Ljava/lang/String; = PostBodyContentType
  getPostParams()Ljava/util/Map; = PostParams
  getPostParamsEncoding()Ljava/lang/String; = PostParamsEncoding
  getRetryPolicy()Lcom/mopub/volley/RetryPolicy; = RetryPolicy
  getSequence()I = Sequence
  getTag()Ljava/lang/Object; = Tag
  getTimeoutMs()I = TimeoutMs
  getTrafficStatsTag()I = TrafficStatsTag
  getUrl()Ljava/lang/String; = Url
  addMarker(Ljava/lang/String;)V = AddMarker(string)
  cancel()V = Cancel()
  compareTo(Lcom/mopub/volley/Request;)I = CompareTo(MoPub.Volley.Request)
  deliverError(Lcom/mopub/volley/VolleyError;)V = DeliverError(MoPub.Volley.VolleyError)
  deliverResponse(Ljava/lang/Object;)V = DeliverResponse(Java.Lang.Object)
  getBody()[B = GetBody()
  getPostBody()[B = GetPostBody()
  getPriority()Lcom/mopub/volley/Request$Priority; = GetPriority()
  markDelivered()V = MarkDelivered()
  parseNetworkError(Lcom/mopub/volley/VolleyError;)Lcom/mopub/volley/VolleyError; = ParseNetworkError(MoPub.Volley.VolleyError)
  parseNetworkResponse(Lcom/mopub/volley/NetworkResponse;)Lcom/mopub/volley/Response; = ParseNetworkResponse(MoPub.Volley.NetworkResponse)
  setCacheEntry(Lcom/mopub/volley/Cache$Entry;)Lcom/mopub/volley/Request; = SetCacheEntry(MoPub.Volley.CacheEntry)
  setRequestQueue(Lcom/mopub/volley/RequestQueue;)Lcom/mopub/volley/Request; = SetRequestQueue(MoPub.Volley.RequestQueue)
  setRetryPolicy(Lcom/mopub/volley/RetryPolicy;)Lcom/mopub/volley/Request; = SetRetryPolicy(MoPub.Volley.IRetryPolicy)
  setSequence(I)Lcom/mopub/volley/Request; = SetSequence(int)
  setShouldCache(Z)Lcom/mopub/volley/Request; = SetShouldCache(bool)
  setTag(Ljava/lang/Object;)Lcom/mopub/volley/Request; = SetTag(Java.Lang.Object)
  shouldCache()Z = ShouldCache()
com/mopub/volley/RequestQueue = MoPub.Volley.RequestQueue
  <init>(Lcom/mopub/volley/Cache;Lcom/mopub/volley/Network;)V = .ctor(MoPub.Volley.ICache, MoPub.Volley.INetwork)
  <init>(Lcom/mopub/volley/Cache;Lcom/mopub/volley/Network;I)V = .ctor(MoPub.Volley.ICache, MoPub.Volley.INetwork, int)
  <init>(Lcom/mopub/volley/Cache;Lcom/mopub/volley/Network;ILcom/mopub/volley/ResponseDelivery;)V = .ctor(MoPub.Volley.ICache, MoPub.Volley.INetwork, int, MoPub.Volley.IResponseDelivery)
  getCache()Lcom/mopub/volley/Cache; = Cache
  getSequenceNumber()I = SequenceNumber
  add(Lcom/mopub/volley/Request;)Lcom/mopub/volley/Request; = Add(MoPub.Volley.Request)
  cancelAll(Lcom/mopub/volley/RequestQueue$RequestFilter;)V = CancelAll(MoPub.Volley.RequestQueue.IRequestFilter)
  cancelAll(Ljava/lang/Object;)V = CancelAll(Java.Lang.Object)
  start()V = Start()
  stop()V = Stop()
com/mopub/volley/Response = MoPub.Volley.Response
  cacheEntry = CacheEntry
  error = Error
  intermediate = Intermediate
  result = Result
  isSuccess()Z = IsSuccess
  error(Lcom/mopub/volley/VolleyError;)Lcom/mopub/volley/Response; = Error(MoPub.Volley.VolleyError)
  success(Ljava/lang/Object;Lcom/mopub/volley/Cache$Entry;)Lcom/mopub/volley/Response; = Success(Java.Lang.Object, MoPub.Volley.CacheEntry)
com/mopub/volley/ResponseDelivery = MoPub.Volley.IResponseDelivery
  postError(Lcom/mopub/volley/Request;Lcom/mopub/volley/VolleyError;)V = PostError(MoPub.Volley.Request, MoPub.Volley.VolleyError)
  postResponse(Lcom/mopub/volley/Request;Lcom/mopub/volley/Response;)V = PostResponse(MoPub.Volley.Request, MoPub.Volley.Response)
  postResponse(Lcom/mopub/volley/Request;Lcom/mopub/volley/Response;Ljava/lang/Runnable;)V = PostResponse(MoPub.Volley.Request, MoPub.Volley.Response, Java.Lang.IRunnable)
com/mopub/volley/RetryPolicy = MoPub.Volley.IRetryPolicy
  getCurrentRetryCount()I = CurrentRetryCount
  getCurrentTimeout()I = CurrentTimeout
  retry(Lcom/mopub/volley/VolleyError;)V = Retry(MoPub.Volley.VolleyError)
com/mopub/volley/ServerError = MoPub.Volley.ServerError
  <init>()V = .ctor()
  <init>(Lcom/mopub/volley/NetworkResponse;)V = .ctor(MoPub.Volley.NetworkResponse)
com/mopub/volley/TimeoutError = MoPub.Volley.TimeoutError
  <init>()V = .ctor()
com/mopub/volley/VolleyError = MoPub.Volley.VolleyError
  <init>()V = .ctor()
  <init>(Lcom/mopub/volley/NetworkResponse;)V = .ctor(MoPub.Volley.NetworkResponse)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
  networkResponse = NetworkResponse
  getNetworkTimeMs()J = NetworkTimeMs
com/mopub/volley/VolleyLog = MoPub.Volley.VolleyLog
  <init>()V = .ctor()
  DEBUG = Debug
  TAG = Tag
  d(Ljava/lang/String;[Ljava/lang/Object;)V = D(string, params Java.Lang.Object[])
  e(Ljava/lang/String;[Ljava/lang/Object;)V = E(string, params Java.Lang.Object[])
  e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = E(Java.Lang.Throwable, string, params Java.Lang.Object[])
  setTag(Ljava/lang/String;)V = SetTag(string)
  v(Ljava/lang/String;[Ljava/lang/Object;)V = V(string, params Java.Lang.Object[])
  wtf(Ljava/lang/String;[Ljava/lang/Object;)V = Wtf(string, params Java.Lang.Object[])
  wtf(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = Wtf(Java.Lang.Throwable, string, params Java.Lang.Object[])
com/squareup/picasso/Cache = Com.Squareup.Picasso.ICache
  NONE = None
  clear()V = Clear()
  clearKeyUri(Ljava/lang/String;)V = ClearKeyUri(string)
  get(Ljava/lang/String;)Landroid/graphics/Bitmap; = Get(string)
  maxSize()I = MaxSize()
  set(Ljava/lang/String;Landroid/graphics/Bitmap;)V = Set(string, Android.Graphics.Bitmap)
  size()I = Size()
com/squareup/picasso/Callback = Com.Squareup.Picasso.ICallback
  onError()V = OnError()
  onSuccess()V = OnSuccess()
com/squareup/picasso/Downloader = Com.Squareup.Picasso.IDownloader
  load(Landroid/net/Uri;I)Lcom/squareup/picasso/Downloader$Response; = Load(Android.Net.Uri, int)
  shutdown()V = Shutdown()
com/squareup/picasso/LruCache = Com.Squareup.Picasso.LruCache
  <init>(I)V = .ctor(int)
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  clear()V = Clear()
  clearKeyUri(Ljava/lang/String;)V = ClearKeyUri(string)
  evictAll()V = EvictAll()
  evictionCount()I = EvictionCount()
  get(Ljava/lang/String;)Landroid/graphics/Bitmap; = Get(string)
  hitCount()I = HitCount()
  maxSize()I = MaxSize()
  missCount()I = MissCount()
  putCount()I = PutCount()
  set(Ljava/lang/String;Landroid/graphics/Bitmap;)V = Set(string, Android.Graphics.Bitmap)
  size()I = Size()
com/squareup/picasso/MemoryPolicy = Com.Squareup.Picasso.MemoryPolicy
  NO_CACHE = NoCache
  NO_STORE = NoStore
  valueOf(Ljava/lang/String;)Lcom/squareup/picasso/MemoryPolicy; = ValueOf(string)
  values()[Lcom/squareup/picasso/MemoryPolicy; = Values()
com/squareup/picasso/NetworkPolicy = Com.Squareup.Picasso.NetworkPolicy
  NO_CACHE = NoCache
  NO_STORE = NoStore
  OFFLINE = Offline
  isOfflineOnly(I)Z = IsOfflineOnly(int)
  shouldReadFromDiskCache(I)Z = ShouldReadFromDiskCache(int)
  shouldWriteToDiskCache(I)Z = ShouldWriteToDiskCache(int)
  valueOf(Ljava/lang/String;)Lcom/squareup/picasso/NetworkPolicy; = ValueOf(string)
  values()[Lcom/squareup/picasso/NetworkPolicy; = Values()
com/squareup/picasso/Picasso = Com.Squareup.Picasso.Picasso
  isDebugging()Z = Debugging
  setDebugging(Z)V = Debugging
  isLoggingEnabled()Z = LoggingEnabled
  setLoggingEnabled(Z)V = LoggingEnabled
  getSnapshot()Lcom/squareup/picasso/StatsSnapshot; = Snapshot
  areIndicatorsEnabled()Z = AreIndicatorsEnabled()
  cancelRequest(Landroid/widget/ImageView;)V = CancelRequest(Android.Widget.ImageView)
  cancelRequest(Landroid/widget/RemoteViews;I)V = CancelRequest(Android.Widget.RemoteViews, int)
  cancelRequest(Lcom/squareup/picasso/Target;)V = CancelRequest(Com.Squareup.Picasso.ITarget)
  cancelTag(Ljava/lang/Object;)V = CancelTag(Java.Lang.Object)
  invalidate(Landroid/net/Uri;)V = Invalidate(Android.Net.Uri)
  invalidate(Ljava/io/File;)V = Invalidate(Java.IO.File)
  invalidate(Ljava/lang/String;)V = Invalidate(string)
  load(Landroid/net/Uri;)Lcom/squareup/picasso/RequestCreator; = Load(Android.Net.Uri)
  load(I)Lcom/squareup/picasso/RequestCreator; = Load(int)
  load(Ljava/io/File;)Lcom/squareup/picasso/RequestCreator; = Load(Java.IO.File)
  load(Ljava/lang/String;)Lcom/squareup/picasso/RequestCreator; = Load(string)
  pauseTag(Ljava/lang/Object;)V = PauseTag(Java.Lang.Object)
  resumeTag(Ljava/lang/Object;)V = ResumeTag(Java.Lang.Object)
  setIndicatorsEnabled(Z)V = SetIndicatorsEnabled(bool)
  setSingletonInstance(Lcom/squareup/picasso/Picasso;)V = SetSingletonInstance(Com.Squareup.Picasso.Picasso)
  shutdown()V = Shutdown()
  with(Landroid/content/Context;)Lcom/squareup/picasso/Picasso; = With(Android.Content.Context)
com/squareup/picasso/Request = Com.Squareup.Picasso.Request
  centerCrop = CenterCrop
  centerInside = CenterInside
  config = Config
  hasRotationPivot = HasRotationPivot
  onlyScaleDown = OnlyScaleDown
  priority = Priority
  resourceId = ResourceId
  rotationDegrees = RotationDegrees
  rotationPivotX = RotationPivotX
  rotationPivotY = RotationPivotY
  stableKey = StableKey
  targetHeight = TargetHeight
  targetWidth = TargetWidth
  transformations = Transformations
  uri = Uri
  hasSize()Z = HasSize
  buildUpon()Lcom/squareup/picasso/Request$Builder; = BuildUpon()
com/squareup/picasso/RequestCreator = Com.Squareup.Picasso.RequestCreator
  centerCrop()Lcom/squareup/picasso/RequestCreator; = CenterCrop()
  centerInside()Lcom/squareup/picasso/RequestCreator; = CenterInside()
  config(Landroid/graphics/Bitmap$Config;)Lcom/squareup/picasso/RequestCreator; = Config(Android.Graphics.Bitmap.Config)
  error(Landroid/graphics/drawable/Drawable;)Lcom/squareup/picasso/RequestCreator; = Error(Android.Graphics.Drawables.Drawable)
  error(I)Lcom/squareup/picasso/RequestCreator; = Error(int)
  fetch()V = Fetch()
  fetch(Lcom/squareup/picasso/Callback;)V = Fetch(Com.Squareup.Picasso.ICallback)
  fit()Lcom/squareup/picasso/RequestCreator; = Fit()
  get()Landroid/graphics/Bitmap; = Get()
  into(Landroid/widget/ImageView;)V = Into(Android.Widget.ImageView)
  into(Landroid/widget/ImageView;Lcom/squareup/picasso/Callback;)V = Into(Android.Widget.ImageView, Com.Squareup.Picasso.ICallback)
  into(Landroid/widget/RemoteViews;IILandroid/app/Notification;)V = Into(Android.Widget.RemoteViews, int, int, Android.App.Notification)
  into(Landroid/widget/RemoteViews;I[I)V = Into(Android.Widget.RemoteViews, int, int[])
  into(Lcom/squareup/picasso/Target;)V = Into(Com.Squareup.Picasso.ITarget)
  memoryPolicy(Lcom/squareup/picasso/MemoryPolicy;[Lcom/squareup/picasso/MemoryPolicy;)Lcom/squareup/picasso/RequestCreator; = MemoryPolicy(Com.Squareup.Picasso.MemoryPolicy, params Com.Squareup.Picasso.MemoryPolicy[])
  networkPolicy(Lcom/squareup/picasso/NetworkPolicy;[Lcom/squareup/picasso/NetworkPolicy;)Lcom/squareup/picasso/RequestCreator; = NetworkPolicy(Com.Squareup.Picasso.NetworkPolicy, params Com.Squareup.Picasso.NetworkPolicy[])
  noFade()Lcom/squareup/picasso/RequestCreator; = NoFade()
  noPlaceholder()Lcom/squareup/picasso/RequestCreator; = NoPlaceholder()
  onlyScaleDown()Lcom/squareup/picasso/RequestCreator; = OnlyScaleDown()
  placeholder(Landroid/graphics/drawable/Drawable;)Lcom/squareup/picasso/RequestCreator; = Placeholder(Android.Graphics.Drawables.Drawable)
  placeholder(I)Lcom/squareup/picasso/RequestCreator; = Placeholder(int)
  priority(Lcom/squareup/picasso/Picasso$Priority;)Lcom/squareup/picasso/RequestCreator; = Priority(Com.Squareup.Picasso.Picasso.Priority)
  resize(II)Lcom/squareup/picasso/RequestCreator; = Resize(int, int)
  resizeDimen(II)Lcom/squareup/picasso/RequestCreator; = ResizeDimen(int, int)
  rotate(F)Lcom/squareup/picasso/RequestCreator; = Rotate(float)
  rotate(FFF)Lcom/squareup/picasso/RequestCreator; = Rotate(float, float, float)
  skipMemoryCache()Lcom/squareup/picasso/RequestCreator; = SkipMemoryCache()
  stableKey(Ljava/lang/String;)Lcom/squareup/picasso/RequestCreator; = StableKey(string)
  tag(Ljava/lang/Object;)Lcom/squareup/picasso/RequestCreator; = Tag(Java.Lang.Object)
  transform(Lcom/squareup/picasso/Transformation;)Lcom/squareup/picasso/RequestCreator; = Transform(Com.Squareup.Picasso.ITransformation)
  transform(Ljava/util/List;)Lcom/squareup/picasso/RequestCreator; = Transform(System.Collections.Generic.IList<Com.Squareup.Picasso.ITransformation>)
com/squareup/picasso/RequestHandler = Com.Squareup.Picasso.RequestHandler
  <init>()V = .ctor()
  canHandleRequest(Lcom/squareup/picasso/Request;)Z = CanHandleRequest(Com.Squareup.Picasso.Request)
  load(Lcom/squareup/picasso/Request;I)Lcom/squareup/picasso/RequestHandler$Result; = Load(Com.Squareup.Picasso.Request, int)
com/squareup/picasso/StatsSnapshot = Com.Squareup.Picasso.StatsSnapshot
  <init>(IIJJJJJJJJIIIJ)V = .ctor(int, int, long, long, long, long, long, long, long, long, int, int, int, long)
  averageDownloadSize = AverageDownloadSize
  averageOriginalBitmapSize = AverageOriginalBitmapSize
  averageTransformedBitmapSize = AverageTransformedBitmapSize
  cacheHits = CacheHits
  cacheMisses = CacheMisses
  downloadCount = DownloadCount
  maxSize = MaxSize
  originalBitmapCount = OriginalBitmapCount
  size = Size
  timeStamp = TimeStamp
  totalDownloadSize = TotalDownloadSize
  totalOriginalBitmapSize = TotalOriginalBitmapSize
  totalTransformedBitmapSize = TotalTransformedBitmapSize
  transformedBitmapCount = TransformedBitmapCount
  dump()V = Dump()
  dump(Ljava/io/PrintWriter;)V = Dump(Java.IO.PrintWriter)
com/squareup/picasso/Target = Com.Squareup.Picasso.ITarget
  onBitmapFailed(Landroid/graphics/drawable/Drawable;)V = OnBitmapFailed(Android.Graphics.Drawables.Drawable)
  onBitmapLoaded(Landroid/graphics/Bitmap;Lcom/squareup/picasso/Picasso$LoadedFrom;)V = OnBitmapLoaded(Android.Graphics.Bitmap, Com.Squareup.Picasso.Picasso.LoadedFrom)
  onPrepareLoad(Landroid/graphics/drawable/Drawable;)V = OnPrepareLoad(Android.Graphics.Drawables.Drawable)
com/squareup/picasso/Transformation = Com.Squareup.Picasso.ITransformation
  key()Ljava/lang/String; = Key()
  transform(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap; = Transform(Android.Graphics.Bitmap)
com/squareup/picasso/UrlConnectionDownloader = Com.Squareup.Picasso.UrlConnectionDownloader
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  load(Landroid/net/Uri;I)Lcom/squareup/picasso/Downloader$Response; = Load(Android.Net.Uri, int)
  openConnection(Landroid/net/Uri;)Ljava/net/HttpURLConnection; = OpenConnection(Android.Net.Uri)
  shutdown()V = Shutdown()
